A. Write C++ program  to find and remove duplicate elements from an array.

#include<iostream>
using namespace std;
int RemoveDuplicate(int a[],int N);
int main()
{
   int i,N;
    cout<<"Enter the length of the array ";
    cin>>N;
    int a[N];
    if(N==0)
    {
    cout<<"Array is empty firstly insert the array ";
    return 0;
    }
    cout<<"Enter the array\n";
    for(i=0;i<N;i++)
        cin>>a[i];
    cout<<"\nThe array is\n";
    for(i=0;i<N;i++)
        cout<<a[i];
        cout<<endl;
    int count=RemoveDuplicate(a,N);
    cout<<"Array after removing duplicate elements "<<endl;
    for(i=0;i<N-count;i++)
    {
        cout<<a[i]<<" ";
    }
}
int RemoveDuplicate(int a[],int N)
{
    int i,j,k,c=0,count=0;
    for(i=0;i<N-c;i++)
    {
        for(j=i+1;j<N-c;j++)
        {
            if(a[i]==a[j])
            {
                count++;
                c=c+1;
                k=j;
                for(k;k<N-c;k++)
                {
                    a[k]=a[k+1];
                }
            }
        }
    }
    return c;
}

output

Enter the length of the array 10
Enter the array
1
2
3
4
5
6
3
2
1
6

The array is
1234563216
Array after removing duplicate elements
1 2 3 4 5 6

B. Write code in C++ to sort an array of integers in ascending order.

#include<iostream>
using namespace std;
void SortedArray(int a[],int N);
int main()
{
    int i,N;
    cout<<"Enter the length of the array ";
    cin>>N;
    int a[N];
    if(N==0)
    {
        cout<<"Array is empty firstly insert the array ";
        return 0;
    }
    cout<<"Enter the array\n";
    for(i=0;i<N;i++)
        cin>>a[i];
    cout<<"\nThe first array is\n";
    for(i=0;i<N;i++)
        cout<<a[i];
        SortedArray(a,N);
        cout<<endl<<"Array after short in ascending order "<<endl;
        for(i=0;i<N;i++)
        {
            cout<<a[i]<<" ";
        }
}
void SortedArray(int a[],int N)
{
    int i,j,s,small,temp;
    for(i=0;i<N-1;i++)
    {
        small=a[i];
        for(j=i+1;j<N;j++)
        {
            if(a[j]<small)
            {
                small=a[j];
                temp=a[j];
                a[j]=a[i];
                a[i]=temp;
            }
        }
    }
}


output

Enter the length of the array 10
Enter the array
4
5
6
2
1
3
5
4
6
8

The first array is
4562135468
Array after short in ascending 
order
1 2 3 4 4 5 5 6 6 8

C. Write C++ program that adds two 2-D matrices and prints the result.

//Addition of 2-d arrays
#include<iostream>
int R1,C1,R2,C2;
using namespace std;
int main()
{
    int i,j,a[R1][C1],b[R2][C2];
    cout<<"Enter the size of row of first matrix ";
    cin>>R1;
    cout<<endl<<"Enter the size of col of first matrix ";
    cin>>C1;
    cout<<"Enter the size of row of second matrix ";
    cin>>R2;
    cout<<endl<<"Enter the size of col of second matrix ";
    cin>>C2;
    if(R1!=R2||C1!=C2)
    {
        cout<<"no of rows and columns of both matrix are wrong we cant add this type of matrix";
        return 0;
    }
    cout<<"Enter the first matrix"<<endl;
    for(i=0;i<R1;i++)
    {
        for(j=0;j<C1;j++)
        {
            cin>>a[i][j];
        }
    }
    cout<<endl;
    cout<<"Enter the second matrix"<<endl;
    for(i=0;i<R2;i++)
    {
        for(j=0;j<C2;j++)
        {
            cin>>b[i][j];
        }
    }
    cout<<endl;
    cout<<"The first matrix is"<<endl;
    for(i=0;i<R1;i++)
    {
        for(j=0;j<C1;j++)
        {
            cout<<a[i][j]<<"\t";
        }
        cout<<endl;
    }
    cout<<endl;
    cout<<"The second matrix is"<<endl;
    for(i=0;i<R2;i++)
    {
        for(j=0;j<C2;j++)
        {
            cout<<b[i][j]<<"\t";
        }
        cout<<endl;
    }
    cout<<"The addition of both matrixes is "<<endl;
    for(i=0;i<R1;i++)
    {
        for(j=0;j<C1;j++)
        {
            cout<<a[i][j]+b[i][j]<<"\t";
        }
        cout<<endl;
    }

}


output

Enter the size of row of first 
matrix 4

Enter the size of col of first 
matrix 3
Enter the size of row of second matrix 4

Enter the size of col of second matrix 3
Enter the first matrix
1
2
3
4
5
6
7
8
9
10
11
12

Enter the second matrix        
1
2
3
4
5
6
7
8
9
10
11
12

The first matrix is
10      11      12
10      11      12
10      11      12
10      11      12

The second matrix is
10      11      12
10      11      12
10      11      12
10      11      12
The addition of both matrixes is
20      22      24
20      22      24
20      22      24
20      22      24

D. Write a program to transpose a given 2-D matrix.

//Transpose of 2d array
#include<iostream>
using namespace std;
int main()
{
    int i,j,R,C,temp;
    cout<<"Enter the size of row of the matrix ";
    cin>>R;
    cout<<endl<<"Enter the size of col of the matrix ";
    cin>>C;
    if(R==0||C==0)
    {
        cout<<"This type of matrix is not possible ";
        return 0;
    }
    int a[R][C];
    cout<<endl<<"Enter the matrix"<<endl;
    for(i=0;i<R;i++)
    {
        for(j=0;j<C;j++)
        {
            cin>>a[i][j];
        }
    }
    cout<<"The matrix is"<<endl;
    for(i=0;i<R;i++)
    {
        for(j=0;j<C;j++)
        {
            cout<<a[i][j]<<"\t";
        }
        cout<<endl;
    }
    cout<<endl;
    cout<<"The transpose of matrix is"<<endl;
    int newarr[C][R];
    for(i=0;i<R;i++)
    {
        for(j=0;j<C;j++)
        {
            newarr[j][i]=a[i][j];
        }
    }
    for(i=0;i<C;i++)
    {
        for(j=0;j<R;j++)
        {
            cout<<newarr[i][j]<<"\t";
        }
        cout<<endl;
    }
}



output

Enter the size of row of the matrix 5

Enter the size of col of the matrix 4

Enter the matrix
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
The matrix is
1       2       3       4      
5       6       7       8      
9       10      11      12     
13      14      15      16     
17      18      19      20     

The transpose of matrix is     
1       5       9       13  17

2       6       10      14  18 

3       7       11      15  19 

4       8       12      16  20

E. Write a C++ program to traverse a given 2-D matrix.

//Traverse of 2d array
#include<iostream>
using namespace std;
int main()
{
    int i,j,R,C;
    cout<<"Enter the no of rows in matrix ";
    cin>>R;
    cout<<"Enter the no of column in matrix ";
    cin>>C;
    int a[R][C];
    if(R==0||C==0)
    {
        cout<<"This type of matrix is not possible ";
        return 0;
    }
    cout<<"Enter the matrix"<<endl;
    for(i=0;i<R;i++)
    {
        for(j=0;j<C;j++)
        {
            cin>>a[i][j];
        }
    }
    cout<<"The matrix is"<<endl;
    for(i=0;i<R;i++)
    {
        for(j=0;j<C;j++)
        {
            cout<<a[i][j]<<"\t";
        }
        cout<<endl;
    }
}
    

    

output

Enter the no of rows in matrix 
3
Enter the no of column in matrix 4
Enter the matrix
1
2
3
4
5
6
7
8
9
10
11
12
The matrix is
1       2       3       4      
5       6       7       8      
9       10      11      12

F. Write a program to traverse a 2D matrix in a spiral order and return the elements.

#include <iostream>
using namespace std;
int main(void)
{
	int i,j,k,m,n,rStart,cStart,rEnd,cEnd;

	cout<<"Enter value of m (rows): ";
	cin>>m;
	cout<<"Enter value of n (columns): ";
	cin>>n;
    int a[m][n];

	for(i=0; i<m; i++)
	{
		for(j=0; j<n; j++)
			cin>>a[i][j];
		cout<<endl;
	}

	for(i=0; i<m; i++)
	{
		for(j=0; j<n; j++)
			cout<<a[i][j];
		cout<<endl;
	}
	cout<<endl;
    cout<<"Traverse of 2d matrix in spiral order is "<<endl;
	for(rStart=0,cStart=0,rEnd=m-1,cEnd=n-1; rStart<=rEnd && cStart<=cEnd; rStart++,cStart++,rEnd--,cEnd--)
	{
      	for(k=cStart; k<=cEnd; k++) 
			cout<<a[rStart][k];
		for(k=rStart+1; k<=rEnd; k++) 
			cout<<a[k][cEnd];
		if(rStart<rEnd)
			for(k=cEnd-1; k>=cStart; k--)
				cout<<a[rEnd][k];
		if(cStart<cEnd)
			for(k=rEnd-1; k>=rStart+1; k--)
				cout<<a[k][cStart];
	}
	return 0;
}

output

Enter value of m (rows): 4
Enter value of n (columns): 4
1
2
3
4

5
6
7
8

9
10
11
12

13
14
15
16

1234
5678
9101112
13141516

Traverse of 2d matrix in spiral order is
12348121615141395671110
