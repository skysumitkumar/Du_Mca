hi,
This is a function which sorts a stack inplace,it has been implemented on the lines of insertion sort.in the file that i have mailed you, the useful work is done in functions 'sort and sorter' rest is all bakwaas.

the logic is :

let the stack be: [ 3 , 1, 5, 6, 2] where 3 is top;
then 3 alone is already sorted , so we now put 1 in its correct position.now we will pop 3 and store it as top1. and call the function recursively and stack will be [1,5,6,2] then we will compare the top with prev top1 and we will hence get [1,3,5,6,2].now we need to put 5 in correct position and so on..

in last step we need to put 2 in correct position.so this is what happens

top1=1, recursive call => 
top1=3, recursive call =>
top1=5, recursive call =>
top1=6, recursive call =>

now stack is [2]

we will compare 2 with last top1(ie 6) and stack will be [2,6]

then 2 is compared with 5 and stack is [2,5,6]

then 2 is compared with 3 and then with 1 and in the end stack is 
[1,2,3,5,6].

Running Time:

the sorter function calls sort 'n' times =>O(n)
now in sort function:
T(n)=T(n-1)+theta(1)
=>T(n)=O(n)

hence final running time = O(n) * O(n) = O(n^2).

      
