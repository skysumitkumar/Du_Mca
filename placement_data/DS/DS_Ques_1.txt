
1. Find all the anagrams of a given word in the least amount of time.
You are
provided a dictionary which u can preprocess in any way

2. You are receiving a continuous bit stream, one bit at a time. You
have
to tell when the number formed by the current and previous bit stream
is
divisible by 5. You are not allowed to store the info regarding the
bits which
have already passed

3. There is a sorted array. Some numbers from the start have been
rotated left.
[ just like left rotate with carry ]. Now give the algo of bin search
to find
an element in O(lg n) time

4. You are given an array of sive n of positive and negative numbers.
Also given
another number k. U have to find whether the sum of any two of the
numbers
from the array is equal to k in O(n) time.


5. Merging two search trees

You are given two height balanced binary search trees T and T',
storing m and n elements

respectively. Every element of tree T is smaller than every element of
tree T'. Every node u also

stores height of the subtree rooted at it. Using this extra
information how can you merge the two

trees in time O(log m + log n) (preserving both the height balance and
the order)?

6. Shortest Path Problems

Given a directed graph G(V,E), where edges have nonnegative weights. S
and D are two disjoint subsets of the set of vertices. Give an O(|V|
log |V| + |E|) time algorithm to find the shortest path among the set
of paths possible from any node in S to any node in D.


7. Paths in Directed Acyclic Graph

Given two nodes u,v in a directed acyclic graph G(V,E). Give an O(|E|)
time algorithm to count

all the paths from u to v.

8. Path passing through a subset of nodes

