<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="keywords"
content="i2 I2 i2 technologies paper placement papers campus recruitments interview Placement Papers Campus Recruitments recruitment india companies job career preparation engineering question paper jobs test campussing Recruitment India tests">
<meta name="description"
content="A guide to question papers asked by companies during placements and recruitment across various Indian college campuses Companies like Infosys Wipro TCS Hughes IBM HCL Siemens are listed here">
<meta name="classification" content="Jobs, Career, Company, Preparation, Tests, India">
<meta name="author" content="AVAAVA">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<title>CTS Sample Test Paper For Campus Recruitment</title>
</head>

<body bgcolor="#CCCC99">
<div align="center"><center>

<table border="0" width="100%">
  <tr>
    <td width="50%"><font size="5"><u>i2 Technologies <a name="top">Sample Test Paper</a> </u></font></td>
    <td width="50%"><p align="right"><a href="../index.html" title="Back to home page">Home</a></td>
  </tr>
</table>
</center></div>

<p align="right"><a href="i2.htm">Back To i2&nbsp; Page</a></p>
<font SIZE="2">

<p align="left">&nbsp;</p>

</font>

<p align="left">Q1.Convert 0.9375 to binary</p>

<p align="left">&nbsp;&nbsp;&nbsp; a) 0.0111&nbsp;<br>
&nbsp;&nbsp;&nbsp; b) 0.1011&nbsp;<br>
&nbsp;&nbsp;&nbsp; c) 0.1111&nbsp;<br>
&nbsp;&nbsp;&nbsp; d) none</p>

<p align="left">Ans. (c)</p>

<p align="left">&nbsp;</p>

<p align="left">Q2.( 1a00 * 10b )/ 1010   =  100&nbsp;</p>

<p align="left">&nbsp;&nbsp;&nbsp; a) a=0, b=0&nbsp;<br>
&nbsp;&nbsp;&nbsp; b)a=0, b=1&nbsp;<br>
&nbsp;&nbsp;&nbsp; c) none</p>

<p align="left">Ans. (b)</p>

<p align="left">&nbsp;</p>

<p align="left">Q3. In 32 bit memory machine 24 bits for mantissa and 8 bits for
exponent. To increase the range of floating point.<br>
&nbsp;&nbsp;&nbsp; a) more than 32 bit is to be there.<br>
&nbsp;&nbsp;&nbsp; b) increase 1 bit for mantissa and decrease 1 bit for exponent<br>
&nbsp;&nbsp;&nbsp; c) increase 1 bit for exponent and decrease one bit for mantissa
</p>

<p align="left">&nbsp;
</p>

<p align="left">Q4.In C,&nbsp; "X ? Y : Z "&nbsp; is equal to<br>
&nbsp;&nbsp;&nbsp; a) if (X==0) Y ;else Z<br>
&nbsp;&nbsp;&nbsp; b) if (X!=0) Y ;else Z<br>
&nbsp;&nbsp;&nbsp; c) if (X==0) Y ; Z
</p>

<p align="left">Ans. (b)
</p>

<p align="left">&nbsp;
</p>

<p align="left">Q5. From the following program<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foo()<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int foo(int a, int
b)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (a&amp;b) return 1;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return 0;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>
<br>
&nbsp;&nbsp;&nbsp; a) if either a or b are zero returns always 0<br>
&nbsp;&nbsp;&nbsp; b) if both a &amp; b are non zero returns always 1<br>
&nbsp;&nbsp;&nbsp; c) if both a and b are negative returns 0
</p>

<p align="left">&nbsp;
</p>

<p align="left">Q6. The&nbsp; following function gives some error. What changes
have to be made<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; void ( int a,int
b)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
int t; t=a; a=b; b=t;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
}<br>
&nbsp;&nbsp;&nbsp; a) define void as int and write return t<br>
&nbsp;&nbsp;&nbsp; b) change everywhere  a to *a and b to *b
</p>

<p align="left">&nbsp;
</p>

<p align="left">Q7. Which of the following is incorrect<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a) if a and b are defined as int arrays then (a==b) can never be&nbsp;true<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b) parameters are passed to functions only by values<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; c) defining functions in nested loops
</p>

<p align="left">&nbsp;
</p>

<p align="left">Q8.&nbsp; include&lt;stdio.h&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; void swap(int*,int*);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; main()<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
int arr[8]={36,8,97,0,161,164,3,9}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
for (int i=0; i&lt;7; i++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
for (int j=i+1; j&lt;8;j++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
if(arr[i]&lt;arr[j]) swap(&amp;arr[i],&amp;arr[j]);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; void swap(int*x,int*y)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
int temp; static int cnt=0;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
temp= *x;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
*x=*y;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
*y=temp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
cnt++;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp; What is
cnt equal to<br>
<br>
a) 7&nbsp;<br>
  b) 15&nbsp;<br>
c) 1&nbsp;<br>
  d) none of these
</p>

<p align="left">&nbsp;
</p>

<p align="left">Q9.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int main()<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
FILE *fp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
fp=fopen(&quot;test.dat&quot;,&quot;w&quot;);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
fprintf(fp,'hello\n&quot;);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
fclose(fp);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
fp=fopen (&quot;test.dat&quot;,&quot;w&quot;);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
fprintf (fp, "world");<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
fclose(fp);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
return 0;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
}<br>
<br>
If text.dat file is already present after compiling and execution&nbsp;how many bytes does the file occupy
?<br>
<br>
 a) 0 bytes&nbsp;<br>
b) 5 bytes&nbsp;<br>
c) 11 bytes&nbsp;<br>
d) data is insufficient
</p>

<p align="left">&nbsp;
</p>

<p align="left">Q10.&nbsp;&nbsp;&nbsp; f1(int*x,intflag)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int *y;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *y=*x+3;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; switch(flag)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
case 0:&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
*x=*y+1;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
break;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
case 1:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
*x=*y;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
break;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
case 2:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
*x=*y-1;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
break;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
}&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return(*y)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; main()<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
*x=5;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
i=f1(x,0); j=f1(x,1);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
printf(&quot;%d %d %d &quot;,i,j,*x);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<br>
What is the output?<br>
<br>
	a) 8 8 8&nbsp;<br>
   b) 5 8 8&nbsp;<br>
  c) 8 5 8&nbsp;<br>
  d) none of these
</p>

<p align="left">&nbsp;
</p>

<p align="left">Q12. A function is like this
</p>

<p align="left">&nbsp;&nbsp;&nbsp; swap( int a,int b)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int temp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; temp=a;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a=b;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b=temp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>
What will happen if we&nbsp; put *a and *b inplace of a &amp; b ?
</p>

<p align="left">&nbsp;
</p>

<p align="left">Q13.To increase The Range of a Floating point Member what should
be done?
</p>

<p align="left">
    Ans.&nbsp; Mantissa should be decreased and exponential should be increased
</p>

<p align="left">&nbsp;
</p>

<p align="left"><b>Miscellaneous Notes</b>
</p>


  <p align="left"><i>Other Problems in C included usage of Select Case, Bit-Wise
  Operators, Call By Reference/By Value, Pointers, Files etc.</i>
</p>


  <p align="left"><i>Also questions on DBMS (SQL queries), Logic Gates &amp;
  Design can be asked</i>
</p>

<p align="left">&nbsp;<br>
<br>
<b><u><font size="4">
		       Part  Two<br>
</font></u></b><br>
<i>
          One Big Question   ( 20 Marks , <font size="3">20
MIN.)</font></i><br>
<br>
Q. <font size="3">Write a program in C++ (or in C) for the following Data.&nbsp;</font>
</p>

<p><font size="3">A school Trust That manages many schools in a city has decided
to merge two of its branches by moving all the students of different standards
and divisions from both the branches to their newly acquired complex. How ever,
when moving it is ensured that every student's standard and division
remains same.<br>
Thus a student of 7F (standard 7,division F) from one of the
branches will continue to be in 7F in the new school complex.<br>
Given that the student strength of both the branches in the
form of a list of division and strength pairs terminated by a $ sign as shown in
the example as follows.....</font></p>
<p><font size="3">&nbsp;&nbsp;&nbsp; 1A 30&nbsp;&nbsp;&nbsp;&nbsp; 1B 28&nbsp;&nbsp;&nbsp;&nbsp;
2A 35&nbsp;&nbsp;&nbsp; 2B 38&nbsp;&nbsp;&nbsp;&nbsp; 2C 36&nbsp;&nbsp;&nbsp;&nbsp;
2D 34&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3A 32&nbsp;&nbsp;&nbsp;&nbsp; 3B 34&nbsp;
.... $</font></p>
<p><font size="3">&nbsp;&nbsp;&nbsp; 1A 25&nbsp;&nbsp;&nbsp;&nbsp; 1B 24&nbsp;&nbsp;&nbsp;&nbsp;
1C 26&nbsp;&nbsp;&nbsp;</font> <font size="3">1D 25&nbsp;&nbsp;&nbsp;&nbsp; 1E 22&nbsp;&nbsp;&nbsp;&nbsp;
2A 40&nbsp;&nbsp;&nbsp;&nbsp; 2B 42&nbsp;&nbsp;&nbsp;&nbsp;</font>&nbsp;<font size="3">&nbsp;
3A 35&nbsp; ....&nbsp; $</font></p>
<p><font size="3">Write a program to read the above data and output the student</font>
<font size="3">strength of the new larger school in the same format.</font></p>
<p><font size="3">Your Program</font></p>
<p><font size="3">1) Must not assume any limit on the no. of divisions or
classes in schools.<br>
2) Must not output divisions with 0 strength.<br>
3) Must use dynamic structures.</font></p>
<font SIZE="2">
<p>&nbsp;</p>
</font><p align="left">&nbsp;</p>

<p align="center"><a href="#top">Back to top</a></p>
</body>
</html>
