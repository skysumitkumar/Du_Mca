<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0041)http://www.placementpapers.com/I2/I21.htm -->
<HTML><HEAD><TITLE>CTS Sample Test Paper For Campus Recruitment</TITLE>
<META http-equiv=Content-Type content="text/html; charset=iso-8859-1">
<META 
content="i2 I2 i2 technologies paper placement papers campus recruitments interview Placement Papers Campus Recruitments recruitment india companies job career preparation engineering question paper jobs test campussing Recruitment India tests" 
name=keywords>
<META 
content="A guide to question papers asked by companies during placements and recruitment across various Indian college campuses Companies like Infosys Wipro TCS Hughes IBM HCL Siemens are listed here" 
name=description>
<META content="Jobs, Career, Company, Preparation, Tests, India" 
name=classification>
<META content=AVAAVA name=author>
<META content="MSHTML 6.00.2462.0" name=GENERATOR></HEAD>
<BODY bgColor=#cccc99>
<DIV align=center>
<CENTER>
<TABLE width="100%" border=0>
  <TBODY>
  <TR>
    <TD width="50%"><FONT size=5><U>i2 Technologies <A name=top>Sample Test 
      Paper</A> </U></FONT></TD>
    <TD width="50%">
      <P align=right><A title="Back to home page" 
      href="http://www.placementpapers.com/index.html">Home</A></P></TD></TR></TBODY></TABLE></CENTER></DIV>
<P align=right><A href="http://www.placementpapers.com/I2/i2.htm">Back To 
i2&nbsp; Page</A></P><FONT size=2>
<P align=left>&nbsp;</P></FONT>
<P align=left>Q1.Convert 0.9375 to binary</P>
<P align=left>&nbsp;&nbsp;&nbsp; a) 0.0111&nbsp;<BR>&nbsp;&nbsp;&nbsp; b) 
0.1011&nbsp;<BR>&nbsp;&nbsp;&nbsp; c) 0.1111&nbsp;<BR>&nbsp;&nbsp;&nbsp; d) 
none</P>
<P align=left>Ans. (c)</P>
<P align=left>&nbsp;</P>
<P align=left>Q2.( 1a00 * 10b )/ 1010 = 100&nbsp;</P>
<P align=left>&nbsp;&nbsp;&nbsp; a) a=0, b=0&nbsp;<BR>&nbsp;&nbsp;&nbsp; b)a=0, 
b=1&nbsp;<BR>&nbsp;&nbsp;&nbsp; c) none</P>
<P align=left>Ans. (b)</P>
<P align=left>&nbsp;</P>
<P align=left>Q3. In 32 bit memory machine 24 bits for mantissa and 8 bits for 
exponent. To increase the range of floating point.<BR>&nbsp;&nbsp;&nbsp; a) more 
than 32 bit is to be there.<BR>&nbsp;&nbsp;&nbsp; b) increase 1 bit for mantissa 
and decrease 1 bit for exponent<BR>&nbsp;&nbsp;&nbsp; c) increase 1 bit for 
exponent and decrease one bit for mantissa </P>
<P align=left> </P>
<P align=left>Q4.In C,&nbsp; "X ? Y : Z "&nbsp; is equal 
to<BR>&nbsp;&nbsp;&nbsp; a) if (X==0) Y ;else Z<BR>&nbsp;&nbsp;&nbsp; b) if 
(X!=0) Y ;else Z<BR>&nbsp;&nbsp;&nbsp; c) if (X==0) Y ; Z </P>
<P align=left>Ans. (b) </P>
<P align=left> </P>
<P align=left>Q5. From the following 
program<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
foo()<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int 
foo(int a, int 
b)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
if (a&amp;b) return 
1;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
return 0;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}<BR><BR>&nbsp;&nbsp;&nbsp; a) if either a or b are zero returns always 
0<BR>&nbsp;&nbsp;&nbsp; b) if both a &amp; b are non zero returns always 
1<BR>&nbsp;&nbsp;&nbsp; c) if both a and b are negative returns 0 </P>
<P align=left> </P>
<P align=left>Q6. The&nbsp; following function gives some error. What changes 
have to be 
made<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; void 
( int a,int 
b)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
int t; t=a; a=b; 
b=t;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}<BR>&nbsp;&nbsp;&nbsp; a) define void as int and write return 
t<BR>&nbsp;&nbsp;&nbsp; b) change everywhere a to *a and b to *b </P>
<P align=left> </P>
<P align=left>Q7. Which of the following is 
incorrect<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a) if a and b are 
defined as int arrays then (a==b) can never 
be&nbsp;true<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b) parameters are 
passed to functions only by values<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
c) defining functions in nested loops </P>
<P align=left> </P>
<P align=left>Q8.&nbsp; 
include&lt;stdio.h&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; void 
swap(int*,int*);<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
main()<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
int 
arr[8]={36,8,97,0,161,164,3,9}<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
for (int i=0; i&lt;7; 
i++)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
for (int j=i+1; 
j&lt;8;j++)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
if(arr[i]&lt;arr[j]) 
swap(&amp;arr[i],&amp;arr[j]);<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
void 
swap(int*x,int*y)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
int temp; static int 
cnt=0;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
temp= 
*x;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
*x=*y;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
*y=temp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
cnt++;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}<BR>&nbsp;&nbsp;&nbsp; What is cnt equal to<BR><BR>a) 7&nbsp;<BR>b) 
15&nbsp;<BR>c) 1&nbsp;<BR>d) none of these </P>
<P align=left> </P>
<P align=left>Q9.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int 
main()<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
FILE 
*fp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
fp=fopen("test.dat","w");<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
fprintf(fp,'hello\n");<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
fclose(fp);<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
fp=fopen 
("test.dat","w");<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
fprintf (fp, 
"world");<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
fclose(fp);<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
return 
0;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}<BR><BR>If text.dat file is already present after compiling and 
execution&nbsp;how many bytes does the file occupy ?<BR><BR>a) 0 
bytes&nbsp;<BR>b) 5 bytes&nbsp;<BR>c) 11 bytes&nbsp;<BR>d) data is insufficient 
</P>
<P align=left> </P>
<P align=left>Q10.&nbsp;&nbsp;&nbsp; 
f1(int*x,intflag)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
int *y;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
*y=*x+3;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
switch(flag)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
case 
0:&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
*x=*y+1;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
break;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
case 
1:<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
*x=*y;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
break;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
case 
2:<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
*x=*y-1;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
break;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
return(*y)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
main()<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
*x=5;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
i=f1(x,0); 
j=f1(x,1);<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
printf("%d %d %d 
",i,j,*x);<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<BR>What is the output?<BR><BR>a) 8 8 8&nbsp;<BR>b) 5 8 8&nbsp;<BR>c) 8 5 
8&nbsp;<BR>d) none of these </P>
<P align=left> </P>
<P align=left>Q12. A function is like this </P>
<P align=left>&nbsp;&nbsp;&nbsp; swap( int a,int 
b)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int 
temp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
temp=a;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
a=b;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
b=temp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<BR>What will happen if 
we&nbsp; put *a and *b inplace of a &amp; b ? </P>
<P align=left> </P>
<P align=left>Q13.To increase The Range of a Floating point Member what should 
be done? </P>
<P align=left>Ans.&nbsp; Mantissa should be decreased and exponential should be 
increased </P>
<P align=left> </P>
<P align=left><B>Miscellaneous Notes</B> </P>
<P align=left><I>Other Problems in C included usage of Select Case, Bit-Wise 
Operators, Call By Reference/By Value, Pointers, Files etc.</I> </P>
<P align=left><I>Also questions on DBMS (SQL queries), Logic Gates &amp; Design 
can be asked</I> </P>
<P align=left><BR><BR><B><U><FONT size=4>Part Two<BR></FONT></U></B><BR><I>One 
Big Question ( 20 Marks , <FONT size=3>20 MIN.)</FONT></I><BR><BR>Q. <FONT 
size=3>Write a program in C++ (or in C) for the following Data.&nbsp;</FONT> 
</P>
<P><FONT size=3>A school Trust That manages many schools in a city has decided 
to merge two of its branches by moving all the students of different standards 
and divisions from both the branches to their newly acquired complex. How ever, 
when moving it is ensured that every student's standard and division remains 
same.<BR>Thus a student of 7F (standard 7,division F) from one of the branches 
will continue to be in 7F in the new school complex.<BR>Given that the student 
strength of both the branches in the form of a list of division and strength 
pairs terminated by a $ sign as shown in the example as follows.....</FONT></P>
<P><FONT size=3>&nbsp;&nbsp;&nbsp; 1A 30&nbsp;&nbsp;&nbsp;&nbsp; 1B 
28&nbsp;&nbsp;&nbsp;&nbsp; 2A 35&nbsp;&nbsp;&nbsp; 2B 38&nbsp;&nbsp;&nbsp;&nbsp; 
2C 36&nbsp;&nbsp;&nbsp;&nbsp; 2D 34&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3A 
32&nbsp;&nbsp;&nbsp;&nbsp; 3B 34&nbsp; .... $</FONT></P>
<P><FONT size=3>&nbsp;&nbsp;&nbsp; 1A 25&nbsp;&nbsp;&nbsp;&nbsp; 1B 
24&nbsp;&nbsp;&nbsp;&nbsp; 1C 26&nbsp;&nbsp;&nbsp;</FONT> <FONT size=3>1D 
25&nbsp;&nbsp;&nbsp;&nbsp; 1E 22&nbsp;&nbsp;&nbsp;&nbsp; 2A 
40&nbsp;&nbsp;&nbsp;&nbsp; 2B 42&nbsp;&nbsp;&nbsp;&nbsp;</FONT>&nbsp;<FONT 
size=3>&nbsp; 3A 35&nbsp; ....&nbsp; $</FONT></P>
<P><FONT size=3>Write a program to read the above data and output the 
student</FONT> <FONT size=3>strength of the new larger school in the same 
format.</FONT></P>
<P><FONT size=3>Your Program</FONT></P>
<P><FONT size=3>1) Must not assume any limit on the no. of divisions or classes 
in schools.<BR>2) Must not output divisions with 0 strength.<BR>3) Must use 
dynamic structures.</FONT></P><FONT size=2>
<P>&nbsp;</P></FONT>
<P align=left>&nbsp;</P>
<P align=center><A href="http://www.placementpapers.com/I2/I21.htm#top">Back to 
top</A></P></BODY></HTML>
