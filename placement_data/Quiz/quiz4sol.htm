<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0068)http://www.cs.uiuc.edu/class/fa05/cs400/_quiz/_quizsol/quiz4sol.html -->
<HTML><HEAD>
<META http-equiv=Content-Type content="text/html; charset=utf-8">
<META content="MSHTML 6.00.5730.11" name=GENERATOR></HEAD>
<BODY><PRE></PRE><STRONG>Question 0 :</STRONG> <PRE>        Given an empty queue Q, what does it look like after the
        following operations?

        Q.Enqueue(5)
        Q.Enqueue(2)
        Q.Dequeue()
        Q.Enqueue(3)
        Q.Dequeue()

        a) 3
        b) 5
        c) 9
        d) none of the above
<EM>Answer:</EM>
   a
</PRE><STRONG>Question 1 :</STRONG> <PRE>        Given an empty stack S, what does it look like afer the
        following operations?

        S.Push(225)
        S.Push(5)
        S.Push(2)
        S.Pop()
        S.Pop()
        S.Push(3)
        S.Pop()

        a)  3
        b)  5
        c)  9
        d)  none of the above
<EM>Answer:</EM>
   d
</PRE><STRONG>Question 2 :</STRONG> <PRE>        Given a 5 element stack S (from top to bottom: 2, 4, 6, 8, 10),
        and an empty queue Q, remove the elements one-by-one from S
        and insert them into Q as you remove them from S, then remove
        them one-by-one from Q and re-insert them into S as you remove
        them from Q. S now looks like (from top to bottom):

        a) 10, 8, 6, 4, 2
        b) 10, 2, 4, 6, 8
        c) 2, 4, 6, 8, 10
        d) 2, 10, 8, 4, 6
        e) none of the above
<EM>Answer:</EM>
   a
</PRE><STRONG>Question 3 :</STRONG> <PRE>        Which of the following best describes the data structure used
        to keep track of function calls as your program is run?

        a)  linked list
        b)  queue
        c)  stack
        d)  array
<EM>Answer:</EM>
   c
</PRE><STRONG>Question 4 :</STRONG> <PRE>        A Stack is best characterized as

        a) Last In First Out
        b) First In First Out
        c) Both (a) and (b)
        d) Neither (a) or (b)
<EM>Answer:</EM>
   a
</PRE><STRONG>Question 5 :</STRONG> <PRE>        A Queue is best characterized as

        a) Last In First Out
        b) First In Last Out
        c) First In First Out
        d) None of the above
<EM>Answer:</EM>
        c
</PRE><STRONG>Question 6 :</STRONG> <PRE>        Which of the following statements is not true?

        a) Singly linked lists can increase their sizes faster than arrays can
        increase their sizes
        b) The singly-linked list does not allow you to access the nth element
        in constant time.
        c) If you mistakingly mis-assign the head pointer to NULL, you will lose
        the entire list.
        d) You can search for and find a value in an array in constant time.
<EM>Answer:</EM>
    d
</PRE><STRONG>Question 7 :</STRONG> <PRE>        What is the reason for using a "circular array"
        to represent a queue instead of a "regular array"?

        a) the running time of the IsEmpty() operation is improved
        b) you can then traverse all the elements in the queue
        c) the rear of the queue can wrap around to the front
           of the array and use empty space
        d) the maximum number of elements the queue can hold
           is increased
<EM>Answer:</EM>
   c
</PRE><STRONG>Question 8 :</STRONG> <PRE>        What is one disadvantage of representing stacks as arrays
        rather than linked lists?

        a) the running time of a Push() operation is slower
        b) if you have filled up the array, extending its size is more
              of a hassle than adding a new node to a list
        c) basic operations are faster on the linked list implementation
        d) Pop() is an unnecessary procedure for stacks represented
           as arrays
<EM>Answer:</EM>
   b
</PRE><STRONG>Question 9 :</STRONG> <PRE>        If I have a data structure and I insert 5, 12 and 1 in that
        order and now I can access 12 in the next operation, the data
        structure I'm using is

        a) a Stack.
        b) a Queue.
        c) an Array.
        d) It would be (a) and it could also be (b)
        e) none of the above.
<EM>Answer:</EM>
   c
</PRE><STRONG>Question 10 :</STRONG> <PRE>        We wish to simulate the idea of customers calling up
        pizza shops and being placed on hold. If this business
        is fair, then the best way to model this situation would be
        with a:

        a) Stack.
        b) Queue.
        c) Both a stack *and* a Queue will work
        d) none of the above.
<EM>Answer:</EM>
    b
</PRE><STRONG>Question 11 :</STRONG> <PRE>        Given an Array ADT implemented using contiguous representation
        (i.e. using a built-in C++ array), what is the running time to
        retrieve an element given the index of its location?

        a)  O(1)
        b)  O(n)
        c)  O(n(log n))
        d)  O(n^2)
<EM>Answer:</EM>
    a
</PRE><STRONG>Question 12 :</STRONG> <PRE>        Given an array implemented using a linked list, what is the running time
        of Find(x)?

        a)  O(1)
        b)  O(n)
        c)  O(n(log n))
        d)  O(n^2)
<EM>Answer:</EM>
    b
</PRE><STRONG>Question 13 :</STRONG> <PRE>        The time taken to find an element in a Binary Search Tree in the
        worst case is
        a) O(log n)
        b) O(n)
        c) O(n * log n)
        d) O(n^2)
<EM>Answer:</EM>
   b
</PRE><STRONG>Question 14 :</STRONG> <PRE>        A tree with n nodes has
        a) n edges
        b) n - 1 edges
        c) n + 1 edges
        d) none of the above
<EM>Answer:</EM>
   b
</PRE><STRONG>Question 15 :</STRONG> <PRE>        The height of a Binary Search Tree after the following sequence
        of operations is:
                insert(4)
                insert(2)
                insert(1)
                insert(6)
                insert(3)
                insert(8)
        a) 5
        b) 4
        c) 3
        d) 2
<EM>Answer:</EM>
   d
</PRE><STRONG>Question 16 :</STRONG> <PRE>        A Binary Search Tree is a special case of
        a) a k-ary tree
        b) a binary tree
        c) both a and b
        d) neither a nor b
<EM>Answer:</EM>
   c
</PRE><STRONG>Question 17 :</STRONG> <PRE>        The time taken for an inorder traversal of a binary tree is
        a) O(log n)
        b) O(n)
        c) O(n * log n)
        d) O(n^2)
<EM>Answer:</EM>
   b
</PRE><STRONG>Question 18 :</STRONG> <PRE>        Which of the following traversals always gives the sorted
        sequence of the elements in a Binary Search Tree?
        a) Preorder
        b) Inorder
        c) Postorder
        d) depends on how the elements are inserted
<EM>Answer:</EM>
   b
</PRE><STRONG>Question 19 :</STRONG> <PRE>        The time taken to insert an element in a Binary Search Tree in the
        average case is
        a) O(log n)
        b) O(n)
        c) O(n * log n)
        d) O(n^2)
<EM>Answer:</EM>
   a
</PRE><STRONG>Question 20 :</STRONG> <PRE>        In a Binary Search Tree with root-&gt;element = 10, if we want to
        insert the element 5, we need to
        a) follow the right pointer
        b) follow the left pointer
        c) replace the root
        d) do none of the above
<EM>Answer:</EM>
   b
</PRE><STRONG>Question 21 :</STRONG> <PRE>        The height of a Binary Search Tree in the worse case is
        a) O(1)
        b) O(log n)
        c) O(n)
        d) O(n * log n)
<EM>Answer:</EM>
   c
</PRE><STRONG>Question 22 :</STRONG> <PRE>        If I insert the integers 1 through n, in increasing order,
        into an initially empty Binary Search Tree, what is the
        height of the tree?
        a) O(n^1/2)
        b) O(n * log n)
        c) O(log n)
        d) O(n)
<EM>Answer:</EM>
   d
</PRE><STRONG>Question 23 :</STRONG> <PRE>        If Node A is a proper ancestor of Node B in a Binary Search Tree,
        which of the following is always true?
        a) Node A is larger than Node B.
        b) Node B is larger than Node A.
        c) Node A is inserted before Node B.
        d) Node B is inserted before Node A.
<EM>Answer:</EM>
   c
</PRE><STRONG>Question 24 :</STRONG> <PRE>                               5
                            /     \
                           3       8
                         /   \   /   \
                        2     4  7    9
                       /        /
                      1        6

        Which of the following about the above tree is NOT true?
        a) It is a Binary Search Tree.
        b) The height will be increased if we insert 10.
        c) The preorder traversal is 5 3 2 1 4 8 7 6 9.
        d) 5 was inserted earlier than 8.
<EM>Answer:</EM>
   b
</PRE><STRONG>Question 25 :</STRONG> <PRE>        Node A and Node B are nodes in a 1000-node tree where all nodes
        have an additional pointer that points upward, to the parent.
        A and B are leaf nodes but are not siblings, and the overall tree
        is reasonably well-balanced. If you are going to move from Node A
        to Node B, which of the nodes below are you NOT guaranteed to pass
        through as you move along the path from A to B?
        a) root node.
        b) parent of A.
        c) parent of B.
        d) grandparent of A.
<EM>Answer:</EM>
   a
</PRE><STRONG>Question 26 :</STRONG> <PRE>        In a Binary Search Tree, the largest element must
        a) be the root.
        b) be a leaf.
        c) have no child.
        d) have at most one child.
<EM>Answer:</EM>
   d
</PRE><STRONG>Question 27 :</STRONG> <PRE>        We say "postorder traversal of a tree" when we visit a node
        a) after we visit all its children
        b) before we visit all its children
        c) in the middle of visiting all its children
        d) none of the above
<EM>Answer:</EM>
   a
</PRE></BODY></HTML>
