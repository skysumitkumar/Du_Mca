<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML><HEAD><TITLE>CSE Department's Web-mail Service</TITLE>
</HEAD><BODY BACKGROUND="/backgrounds/shade_sky.jpg"><CENTER><H3>CSE Department's Web-mail Service</H3><IMG SRC="/icons/bars/colorlin.gif"></CENTER><FORM METHOD="POST" ACTION="http://www.cse.iitk.ac.in/cgi-bin/atdot/messact.pl" ENCTYPE="application/x-www-form-urlencoded">
<INPUT TYPE="hidden" NAME="SESSIONID" VALUE="33qmW.YG7a0Dc"><INPUT TYPE="hidden" NAME="FOLDER" VALUE="POP"><INPUT TYPE="hidden" NAME="MESSAGES" VALUE="72"><INPUT TYPE="hidden" NAME="MESS" VALUE="From: P Narender &amp;lt;nparupalli@yahoo.com&amp;gt;
To: mtech2001@cse.iitk.ac.in
Date: Fri, 9 Aug 2002 12:12:18 -0700 (PDT)
Subject: yesterday,s Mentor paper  at IITKGP


"><PRE>From: P Narender &lt;<A HREF="http://www.cse.iitk.ac.in/cgi-bin/atdot/options.pl?SESSIONID=33qmW.YG7a0Dc&TO=nparupalli@yahoo.com&BUTTON=Send%20Mail%20To">nparupalli@yahoo.com</A>&gt;
To: <A HREF="http://www.cse.iitk.ac.in/cgi-bin/atdot/options.pl?SESSIONID=33qmW.YG7a0Dc&TO=mtech2001@cse.iitk.ac.in&BUTTON=Send%20Mail%20To">mtech2001@cse.iitk.ac.in</A>
Date: Fri, 9 Aug 2002 12:12:18 -0700 (PDT)Subject: yesterday,s Mentor paper  at IITKGP

</PRE><PRE>
Hi friends,
This is the paper of Mentor from IITKGP.This test was conducted on 9th.
The pay scale is 4.2lakh + Other benifits.

 In Mentor graphics written test CS students have to

attempt 7 sections. They are :

 

        1. General Software

        2. C and C++

        3. Datastructures

        4. Operating Systems

        5. Compilers

        6. Computer Architecture & Microprocessors

        7. General Aptitude

 

Total time : 1.30 min

 

        1. General Software

        -------------------

 

1. Match the following :

 

        xv      1) editor

        html    2) to view images

        emacs   3) hyper text

        .....   ........

 

               Ans : 231

 

2. Match the following :

 

        c              1) compiler tool               

        smalltalk      2) scientific programming lang

        cobal           3) object oriented lang

        yacc           4) system prog

        fortran        

 

               Ans : 43512

 

3. cc -E filename what it does ?

 

        Ans : Stop  after the preprocessing stage; 

              do not run the compiler proper.  

              The output is preprocessed source code, 

              which is sent to the standard output

 

4. cat `ls` | grep -v ls | wc –l   (CHANGED QUESTION)

        

        Ans : gives the no. of files in the current dir 

               which dose not have ls in their names

 

5. what does ps do

 

        Ans : lists process status

 

6. One Q. on cvs (control version system) (on the commands of CVS as ci,co,up to give order of these commands ) ANS is not known.

 

7. what is core?

          -program image (ANS)

          

 

8) unit testing is done by..

    -devloper

    - integrator etc

 

         ans:developer

 

                2. C and C++

               -------------

 

1. #define f(x,y)  x##y

        main()

        {

                int a;

                a = f(2,3);

                printf("%d",a);

        }

 

        Ans : 23

 

2.           This question is changed (type is same but some statements are included)

 

 

        main()

        {

        #if 0

               printf("\nif 0\n");

        #endif

 

        #if(0,1)

               printf("\n 0,1");

        #endif

 

        #if(1,0)

               printf("\n 1,0");

        #endif

        }

 

        Ans : 0,1 (middle if block is entered)

 

3. which of the following are same in c

        a) *p, p       b) &(*p), p 

        c) *(&p) , p   d)

 

                       Ans : c

 

4. What is the default return type in ANSI C ?

                       Ans : int

 

 

5. for(p = head; p != NULL; p = p->next) {

        free(p);

   }

                       Ans : Dangling pointer

 

 

6. In main array of five strings are declared like this :

 

main()

{

        char a[5][20] = { "aaaaa", "bbbbb", "ccccc", 

                       "ddddddd", "eeeeee"};

        char *t;

        int i;

 

        t = a[4];

        a[4] = a[3];

        a[3] = t;

 

        for(i = 0; i <= 4; ++i)

               printf("%s\n", a[i]);

 

}

        Ans : compile time error 

              like : incompatible types in assignment

 

7)           what will be the value of N after N<<4

ans: N*16;

 

8)           int fun(int m)

     {

            int i;

            for(i=0;m>0;m>>=1)

             if(m & 01)

                    i++;

 

     }

 

            ans:returns no of 1’s in binary rep’n of m;

 

 

9)           some question on function pointers.

               void *H();

               void (*H1)();

             What is H and H1.

 

   Ans: H is a function returning void pointer ,H1 is a pointer to    function which doesn’t return any thing.

 

10)       some complex question on function pointers to find which is the declaration for the array of 7 pointers to a function which return character array of size 15. (something like that I can not remember exactly)

 

             options are : char (**a[7]) [15]  like this..

 

 

 

 

11)       code of C:

 

     int x[10];

     main()

     {

               struct x{

                 int a;

               };

               printf(“%d”,sizeof(x));

        }

 

      code of c++:

       

              

       int x[10];

     main()

     {

               struct x{

                 int a;

               };

              cout<<sizeof(x);

        }

 

what will be printed in c ,c++

 

        options: 4,80

                  80,4

                   

          (TRY TO RUN THESE AND GET THE CORRECT ANSWER I DON’T KNOW THE ANSWER)

 

 

             

 

12)

         char a;

         int I;

         a=0x0;

         

         for(i=0;a<255;i++)

           a=a+1;               

 

            ans: this will loop infinitely

 

               3. Datastructures

               -----------------

 

1. One question on red-black tree. 

         Which of the following is wrong?

      Ans: red count of each path of a node is same(ACTUALLY black                         

             Count is SAME FOR EACH PATH) 

 

2. which of the following sorting algo is stable ?

        a) COUNT SORT  b)heap sort    c)quick sort D)bucket sort

 

      ans: count sort

 

3. in a 1000 node binary tree to search 385, which of the follwing

   sequence is not correct

        4 sequences are given

 

4. which of the following is not the post order of the heap  

        4 sequences are given

 

5. Travelling salesman problem is ....  

        a) NP complete ........

   

 

         (THIS QUESTION IS REPEATED TWICE IN A MATCHING ALSO                               “TSP”-NP  COMPLETE) 

 

 

6. One question like : For external sorting how many 

   disk accesses are needed (given b blocks k passes ...)

   I CAN NOT SOLVE THIS

 

7. some question on convex hull (I can not remember exactly).

 

 

 

 

                  4. Operating Systems

                  --------------------

 

1. which of the following are used to detect deadlock

        a) Resouce allocation graph

        b) hoarse table

        c) ....

        d)all the above

                       Ans : d

 

2. what does lseek do ?

 

3. Conventional unix systems used to be :

        Ans : time sharing

 

4. Question on Multilevel feedback queue

 

        ans: when proiority of a process changes based on CPU burst. 

 

 

5. Overlaying is :

        Ans : Overwriting process memory layout with anothers 

 

6. Bootstrap loader lies in :

        Ans : ROM

 

7. Bootstrap loader does :

        a) locating kernel

        b) creates one dummy process to load kernel.

        c) loads kernel

        d) all the above

               Ans : d

8.

..

..

                5. Compilers

               ------------

(We attempted very few questions in this section)

 

1. 3 address code is used in which stage of compilation ?

        Ans : Intermidiate Code generation 

2)

 grammer is:

  E -> E * T

  E -> T

   T -> T –F

   T -> F

   F-> id (digit)

 

    Ans: * has less precedence than –

 

3) same as above grammer what is the value of expression 4-2-4*3

          ans:   -6

..

4) which language is generated by grammer:

 

    s -> (s)s

    s ->  epsilon (empty symbol)

 

   ans: string of matching paranthesis

 

5)call by reference problem.

        Fun(x,y,z)

        {

            y=y+1;

            z=z+x;

         }

 

         a=2,b=3;

         call of function is

       

          fun(a+b,a,a);

 

    Ans:13 

 

 

       6. Computer Architecture & Microprocessors

        ------------------------------------------

 

1. 176 in base 12 is :..........

 

2. The string "ABCDEFGH" is stored by  processors P1 & P2 as 

   shown below

  

   P1          P2

 

   0x2000 AB   0x2000 GH

   0x2002 CD   0x2002 EF

   0x2004 EF   0x2004 CD

   0x2006 GH   0x2006 AB

 

   ans) P2 little endian & P1 big endian 

        ( lsb is at lower address -> little endian)

 

3. cache coloring is used for solving 

   a) cache coherence

   b) to reduce cache misses

   c) to increase hit ratio

   d) 

 

4. A cache is 2-way set associative, 

   cache block & cache line sizes are given

   how many bits are used for indexing into cache ?

 

5. for a 16 bit micro processor, clock freq is given as 2MHz. 

   For instruction fetching and decoding it takes 4 T-states and 3

 T-states for memory reading . what is the time taken by  

   execution of mvi A 06h.

 

    ans : 3.5 micro secs

 

 

 

6. Processor P1 clock freq is less than that of P2, 

   but P1 is faster in execution in time. the reason may be 

   a) P1 is implementing by pipelining

   b) P1 exploits locality of reference

   c) a & b

   d) P1 can't execute faster than P2 .

 

   ans) c

 

 

7) what is the task of “score board”??

 

8) of these which has control over bus?

   -- DMA controller,UART controller,CPU

   -- CPU ,DMA controller,external master bus controller

   -- CPU,DMA controller, external master bus interface

   -- none of the above

 

      I don’t know ans.

 

   

 

                       7. General Aptitude

                       -------------------

So many questions are there, they are infact easy.

You can try there itself

 

 

 

 

 

 

 

Regarding interview:

 

 They are asking much about C++,datastructures,Algorithms.

 

Some questions on sorting (which one is a stable sort (merge sort,count sort).

Some questions on virtual function(pure),copy constructure..

 

The questions were simple.

(some questions are from the written test)

 

and 

Why would U like to join Mentor??


KATTI SREEDHAR
ROOM NO:A-305,
VS HALL,
IIT KHARAGPUR.
PH:03222 81168


---------------------------------
Do You Yahoo!?
HotJobs, a Yahoo! service - Search Thousands of New Jobs

----------------------------------------
Parupalli Narender
M.Tech(C.S.E)
Dept. of CSE,
IIT Kanpur,Kanpur-16,UP
http://www.cse.iitk.ac.in/users/narender
----------------------------------------


---------------------------------
Do You Yahoo!?
HotJobs, a Yahoo! service - Search Thousands of New Jobs
</PRE><PRE><P>Hi friends,
<P>This is the paper of Mentor from IITKGP.This test was conducted on 9th.
<P>The pay scale is 4.2lakh + Other benifits.<BR>
<BLOCKQUOTE style="BORDER-LEFT: #1010ff 2px solid; MARGIN-LEFT: 5px; PADDING-LEFT: 5px"><PRE><TT><?xml:namespace prefix = o ns = "urn:schemas-microsoft-com:office:office" /><o:p>&nbsp;I</o:p></TT><TT>n </TT><?xml:namespace prefix = st1 ns = "urn:schemas-microsoft-com:office:smarttags" /><st1:City><st1:place><TT>Mentor</TT></st1:place></st1:City><TT> graphics written test CS students have to<o:p></o:p></TT></PRE><PRE><TT>attempt 7 sections. They are :<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>1. General Software<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>2. C and C++<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>3. Datastructures<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>4. Operating Systems<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>5. Compilers<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>6. Computer Architecture &amp; Microprocessors<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>7. General Aptitude<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>Total time : 1.30 min<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>1. General Software<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>-------------------<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>1. Match the following :<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs!
p; </SPAN>xv<SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>1) editor<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>html<SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp; </SPAN>2) to view images<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>emacs<SPAN style="mso-tab-count: 1">&nbsp;&nbsp; </SPAN>3) hyper text<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>.....<SPAN style="mso-tab-count: 1">&nbsp;&nbsp; </SPAN>........<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>Ans : 231<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>2. Match the following :<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>c<SPAN style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>1) compiler tool<SPAN style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>smalltalk<SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>2) scientific programming lang<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>cobal<SPAN style="mso-tab-count: 1">&nbsp;&nbsp; </SPAN><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>3) object oriented lang<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>yacc<SPAN style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SP!
AN>4) system prog<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>fortran<SPAN style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>Ans : 43512<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>3. cc -E filename what it does ?<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>Ans : Stop<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>after the preprocessing stage; <o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN>do not run the compiler proper.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN><o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN>The output is preprocessed source code, <o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN>which is sent to the standard output<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>4. cat `ls` | grep -v ls | wc –l<SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>(CHANGED QUESTION)<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>Ans : gives the no. of files in the current dir <o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;!
&nbsp;&nbsp;&nbsp; </SPAN>which dose not have ls in their names<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>5. what does ps do<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>Ans : lists process status<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>6. One Q. on cvs (control version system) (on the commands of CVS as ci,co,up to give order of these commands ) ANS is not known.<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>7. what is core?<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>-program image (ANS)<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>8) unit testing is done by..<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>-devloper<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>- integrator etc<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>ans:developer<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN> 2. C and C++<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>-------------<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>1. #define f(x,y)<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>x##y<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>main()<o:p></o:p></TT></PRE><PRE><TT><SPAN s!
tyle="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>{<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>int a;<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>a = f(2,3);<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>printf("%d",a);<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>}<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>Ans : 23<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE style="MARGIN-LEFT: 63.75pt; TEXT-INDENT: -45.75pt; mso-list: l1 level1 lfo1; tab-stops: 45.8pt list 63.75pt left 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt"><TT><SPAN style="mso-fareast-font-family: 'Courier New'"><SPAN style="mso-list: Ignore">2.<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN></SPAN></SPAN></TT><TT>This question is changed (type is same but some statements are included)<o:p></o:p></TT></PRE><PRE style="MARGIN-LEFT: 63.75pt"><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>main()<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>{<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>#if 0<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="mso-tab!
-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>printf("\nif 0\n");<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>#endif<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>#if(0,1)<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>printf("\n 0,1");<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>#endif<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>#if(1,0)<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>printf("\n 1,0");<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>#endif<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>}<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>Ans : 0,1 (middle if block is entered)<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>3. which of the following are same in c<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>a) *p, p <SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>b) &amp;(*p), p <o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>c) *(&amp;p) , p<SPAN style="mso-tab-count: 1">&nbsp;&nbsp; </SPAN>d)<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-coun!
t: 3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>Ans : c<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>4. What is the default return type in ANSI C ?<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>Ans : int<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>5. for(p = head; p != NULL; p = p-&gt;next) {<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>free(p);<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>}<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>Ans : Dangling pointer<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>6. In main array of five strings are declared like this :<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>main()<o:p></o:p></TT></PRE><PRE><TT>{<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>char a[5][20] = { "aaaaa", "bbbbb", "ccccc", <o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>"ddddddd", "eeeeee"};<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>char *t;<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>int i;<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1!
">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>t = a[4];<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>a[4] = a[3];<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>a[3] = t;<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>for(i = 0; i &lt;= 4; ++i)<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>printf("%s\n", a[i]);<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>}<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>Ans : compile time error <o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN>like : incompatible types in assignment<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE style="MARGIN-LEFT: 66pt; TEXT-INDENT: -48pt; mso-list: l0 level1 lfo2; tab-stops: 45.8pt list 66.0pt left 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt"><TT><SPAN style="mso-fareast-font-family: 'Courier New'"><SPAN style="mso-list: Ignore">7)<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN></SPAN></SPAN></TT><TT>what will be the value of N after N&lt;&lt;4<o:p></o:p></TT></PRE><PRE style="MARGIN-LEFT: 66pt"><TT>ans: N*16;<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE style="MARGIN-LEFT: 66pt; TEXT-INDENT: -48pt; mso-list: l0 level1 lfo2; tab-stops: 45.8pt list 66.0pt left 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt"><!
TT><SPAN style="mso-fareast-font-family: 'Courier New'"><SPAN style="mso-list: Ignore">8)<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN></SPAN></SPAN></TT><TT>int fun(int m)<o:p></o:p></TT></PRE><PRE style="MARGIN-LEFT: 0.25in"><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>{<o:p></o:p></TT></PRE><PRE style="MARGIN-LEFT: 0.25in"><TT><SPAN style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>int i;<o:p></o:p></TT></PRE><PRE style="MARGIN-LEFT: 0.25in"><TT><SPAN style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>for(i=0;m&gt;0;m&gt;&gt;=1)<o:p></o:p></TT></PRE><PRE style="MARGIN-LEFT: 0.25in"><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>if(m &amp; 01)<o:p></o:p></TT></PRE><PRE style="MARGIN-LEFT: 0.25in"><TT><SPAN style="mso-tab-count: 3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>i++;<o:p></o:p></TT></PRE><PRE style="MARGIN-LEFT: 0.25in"><TT><o:p>&nbsp;</o:p></TT></PRE><PRE style="MARGIN-LEFT: 0.25in"><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>}<o:p></o:p></TT></PRE><PRE style="MARGIN-LEFT: 0.25in"><TT><o:p>&nbsp;</o:p></TT></PRE><PRE style="MARGIN-LEFT: 0.25in"><TT><SPAN style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>ans:returns no of 1’s in binary rep’n of m;<o:p></o:p></TT></PRE><PRE style="MARGIN-LEFT: 0.25in"><TT><o:p>&nbsp;</o:p></TT></PRE><PRE style="MARGIN-LEFT: 0.25in"><TT><o:p>&nbsp;</o:p></TT></PRE><PRE style="MARGIN-LEFT: 66pt; TEXT-INDENT: -48pt; mso-list: l0 level1 lfo2; tab-stops: 45.8pt list 66.0pt left 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt"><TT><SPAN style="mso-fareast-font-family: 'Courier New'"><SPAN style="mso!
-list: Ignore">9)<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN></SPAN></SPAN></TT><TT>some question on function pointers.<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>void *H();<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>void (*H1)();<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>What is H and H1.<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>Ans: H is a function returning void pointer ,H1 is a pointer to<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>function which doesn’t return any thing.<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE style="MARGIN-LEFT: 66pt; TEXT-INDENT: -48pt; mso-list: l0 level1 lfo2; tab-stops: 45.8pt list 66.0pt left 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt"><TT><SPAN style="mso-fareast-font-family: 'Courier New'"><SPAN style="mso-list: Ignore">10)<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN></SPAN></SPAN></TT><TT>some complex question on function pointers to find which is the declaration for the array of 7 pointers to a function which return character array of size 15. (something like that I can not remember exactly)<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>options are : char (**a[7]) [15]<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>like this..<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT> <o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</!
o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE style="MARGIN-LEFT: 66pt; TEXT-INDENT: -48pt; mso-list: l0 level1 lfo2; tab-stops: 45.8pt list 66.0pt left 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt"><TT><SPAN style="mso-fareast-font-family: 'Courier New'"><SPAN style="mso-list: Ignore">11)<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN></SPAN></SPAN></TT><TT>code of C:<o:p></o:p></TT></PRE><PRE style="MARGIN-LEFT: 0.25in"><TT><o:p>&nbsp;</o:p></TT></PRE><PRE style="MARGIN-LEFT: 0.25in"><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>int x[10];<o:p></o:p></TT></PRE><PRE style="MARGIN-LEFT: 0.25in"><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>main()<o:p></o:p></TT></PRE><PRE style="MARGIN-LEFT: 0.25in"><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>{<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>struct x{<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>int a;<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN>};<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>printf(“%d”,sizeof(x));<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>}<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>code of c++:<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><o:p></o:p></TT!
></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><o:p></o:p></TT></PRE><PRE style="MARGIN-LEFT: 0.25in"><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN>int x[10];<o:p></o:p></TT></PRE><PRE style="MARGIN-LEFT: 0.25in"><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>main()<o:p></o:p></TT></PRE><PRE style="MARGIN-LEFT: 0.25in"><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>{<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>struct x{<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>int a;<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>};<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>cout&lt;&lt;sizeof(x);<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>}<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>what will be printed in c ,c++<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN>options: 4,80<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>80,4<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&n!
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN>(TRY TO RUN THESE AND GET THE CORRECT ANSWER I DON’T KNOW THE ANSWER)<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>12)<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>char a;<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>int I;<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>a=0x0;<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN>for(i=0;a&lt;255;i++)<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN>a=a+1;<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>ans: this will loop infinitely<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>3. Datastructures<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>-----------------<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></!
PRE><PRE><TT>1. One question on red-black tree. <o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN>Which of the following is wrong?<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>Ans: red count of each path of a node is same(ACTUALLY black<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN>Count is SAME FOR EACH PATH) <o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>2. which of the following sorting algo is stable ?<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>a) COUNT SORT<SPAN style="mso-tab-count: 1">&nbsp; </SPAN>b)heap sort<SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp; </SPAN>c)quick sort D)bucket sort<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>ans: count sort<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>3. in a 1000 node binary tree to search 385, which of the follwing<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>sequence is not correct<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>4 sequences are given<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>4. which of the following is not the post order of the heap<SPAN style="mso-spacerun: yes">&nbsp; </SPAN><o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>4 sequences are given<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>5. Travelling salesman problem !
is ....<SPAN style="mso-spacerun: yes">&nbsp; </SPAN><o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>a) NP complete ........<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN><o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>(THIS QUESTION IS REPEATED TWICE IN A MATCHING ALSO<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>“TSP”-NP<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>COMPLETE) <o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>6. One question like : For external sorting how many <o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;</SPAN>disk accesses are needed (given b blocks k passes ...)<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>I CAN NOT SOLVE THIS<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>7. some question on convex hull (I can not remember exactly).<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>4. Operating Systems<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>--------------------<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>1. which of the following are used to detect deadlock<o:p></o:p></TT></PRE><P!
RE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>a) Resouce allocation graph<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>b) hoarse table<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>c) ....<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>d)all the above<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>Ans : d<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>2. what does lseek do ?<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>3. Conventional unix systems used to be :<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>Ans : time sharing<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>4. Question on Multilevel feedback queue<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>ans: when proiority of a process changes based on CPU burst. <o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>5. Overlaying is :<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>Ans : Overwriting process memory layout with anothers <o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>6. Bootstrap loader lies in :<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>Ans : ROM<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>7. Bootstrap loader does :<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;!
&nbsp;&nbsp; </SPAN>a) locating kernel<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>b) creates one dummy process to load kernel.<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>c) loads kernel<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>d) all the above<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>Ans : d<o:p></o:p></TT></PRE><PRE><TT>8.<o:p></o:p></TT></PRE><PRE><TT>.<o:p></o:p></TT></PRE><PRE><TT>.<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>5. Compilers<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>------------<o:p></o:p></TT></PRE><PRE><TT>(We attempted very few questions in this section)<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>1. 3 address code is used in which stage of compilation ?<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>Ans : Intermidiate Code generation <o:p></o:p></TT></PRE><PRE><TT>2)<o:p></o:p></TT></PRE><PRE><TT> grammer is:<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>E -&gt; E * T<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>E -&gt; T<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>T -&gt; T –F<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>T -&gt; F<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>F-&gt; id (digit)<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><!
SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>Ans: * has less precedence than –<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>3) same as above grammer what is the value of expression </TT><st1:date Year="2004" Day="2" Month="4"><TT>4-2-4</TT></st1:date><TT>*3<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>ans:<SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>-6<o:p></o:p></TT></PRE><PRE><TT>.<o:p></o:p></TT></PRE><PRE><TT>4) which language is generated by grammer:<o:p></o:p></TT></PRE><PRE><TT> <o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN>s -&gt; (s)s<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>s -&gt;<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>epsilon (empty symbol)<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>ans: string of matching paranthesis<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>5)call by reference problem.<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>Fun(x,y,z)<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>{<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>y=y+1;<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>z=z+x;<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>}<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>a=2,b=3;<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&!
nbsp;&nbsp; </SPAN>call of function is<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN>fun(a+b,a,a);<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>Ans:13 <o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT> <o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN>6. Computer Architecture &amp; Microprocessors<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>------------------------------------------<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>1. 176 in base 12 is :..........<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>2. The string "ABCDEFGH" is stored by<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>processors P1 &amp; P2 as <o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;</SPAN>shown below<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;</SPAN>P1<SPAN style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>P2<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>0x2000 AB<SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>0x2000 GH<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>0x2002 CD<SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>0x2002 EF<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>0x2004 EF<SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>0x2004 CD<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>0x2006 GH<SPAN style!
="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>0x2006 AB<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>ans) P2 little endian &amp; P1 big endian <o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>( lsb is at lower address -&gt; little endian)<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>3. cache coloring is used for solving <o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;</SPAN>a) cache coherence<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>b) to reduce cache misses<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>c) to increase hit ratio<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>d) <o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>4. A cache is 2-way set associative, <o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;</SPAN>cache block &amp; cache line sizes are given<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>how many bits are used for indexing into cache ?<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>5. for a 16 bit micro processor, clock freq is given as 2MHz. <o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;</SPAN>For instruction fetching and decoding it takes 4 T-states and 3<o:p></o:p></TT></PRE><PRE><TT> T-states for memory reading . what is the time taken by <SPAN style="mso-spacerun: yes">&nbsp;</SPAN><o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;</SPAN>execution of mvi A 06h.<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>ans : 3.5 micro secs<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><o:p>&nbsp;<!
/o:p></TT></PRE><PRE><TT>6. Processor P1 clock freq is less than that of P2, <o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;</SPAN>but P1 is faster in execution in time. the reason may be <o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;</SPAN>a) P1 is implementing by pipelining<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>b) P1 exploits locality of reference<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>c) a &amp; b<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>d) P1 can't execute faster than P2 .<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>ans) c<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>7) what is the task of “score board”??<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>8) of these which has control over bus?<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>-- DMA controller,UART controller,CPU<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>-- CPU ,DMA controller,external master bus controller<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>-- CPU,DMA controller, external master bus interface<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>-- none of the above<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>I don’t know ans.<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN><o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="mso-spacerun!
: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>7. General Aptitude<o:p></o:p></TT></PRE><PRE><TT><SPAN style="mso-tab-count: 3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>-------------------<o:p></o:p></TT></PRE><PRE><TT>So many questions are there, they are infact easy.<o:p></o:p></TT></PRE><PRE><TT>You can try there itself<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>Regarding interview:<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT> They are asking much about C++,datastructures,Algorithms.<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>Some questions on sorting (which one is a stable sort (merge sort,count sort).<o:p></o:p></TT></PRE><PRE><TT>Some questions on virtual function(pure),copy constructure..<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>The questions were simple.<o:p></o:p></TT></PRE><PRE><TT>(some questions are from the written test)<o:p></o:p></TT></PRE><PRE><TT><o:p>&nbsp;</o:p></TT></PRE><PRE><TT>and <o:p></o:p></TT></PRE><PRE><TT>Why would U like to join </TT><st1:City><st1:place><TT>Mentor</TT></st1:place></st1:City><TT>??<o:p></o:p></TT></PRE><BR><BR>KATTI SREEDHAR<BR>ROOM NO:A-305,<BR>VS HALL,<BR>IIT KHARAGPUR.<BR>PH:03222 81168
<P><BR>
<HR SIZE=1>
<B>Do You Yahoo!?</B><BR><A href="http://rd.yahoo.com/careers/mailsig/new/*http://www.hotjobs.com">HotJobs, a Yahoo! service</A> - Search Thousands of New Jobs</BLOCKQUOTE><BR><BR>----------------------------------------<br>Parupalli Narender<br>M.Tech(C.S.E)<br>Dept. of CSE,<br>IIT Kanpur,Kanpur-16,UP<br>http://www.cse.iitk.ac.in/users/narender<br>----------------------------------------<p><br><hr size=1><b>Do You Yahoo!?</b><br>
<a href="http://rd.yahoo.com/careers/mailsig/new/*http://www.hotjobs.com">HotJobs, a Yahoo! service</a> - Search Thousands of New Jobs
--0-675615922-1028920338=:76217--
</PRE><BR><CENTER><IMG SRC="/icons/bars/colorlin.gif"></CENTER><BR><TABLE WIDTH="100%"><TR>
<TD WIDTH="25%" ALIGN="LEFT" VALIGN="TOP">
<INPUT TYPE="submit" NAME="BUTTON" VALUE="Delete"></TD><TD WIDTH="25%" ALIGN="CENTER" VALIGN="TOP">
<INPUT TYPE="submit" NAME="BUTTON" VALUE="Reply"></TD><TD WIDTH="25%" ALIGN="CENTER" VALIGN="TOP">
<INPUT TYPE="submit" NAME="BUTTON" VALUE="Forward"></TD><TD WIDTH="25%" ALIGN="RIGHT" VALIGN="TOP">
<INPUT TYPE="submit" NAME="BUTTON" VALUE="Redirect"></TD></TR>
</TABLE>
</FORM><TABLE WIDTH="100%">
<TR><TD WIDTH="33%" ALIGN="LEFT" VALIGN="TOP">
<FORM METHOD="POST" ACTION="http://www.cse.iitk.ac.in/cgi-bin/atdot/checkmail.pl" ENCTYPE="application/x-www-form-urlencoded">
<INPUT TYPE="hidden" NAME="FOLDER" VALUE="POP"><INPUT TYPE="hidden" NAME="SESSIONID" VALUE="33qmW.YG7a0Dc"><INPUT TYPE="submit" NAME="BUTTON" VALUE="Check Mail (Inbox)"></FORM></TD><TD WIDTH="33%" ALIGN="CENTER" VALIGN="TOP">
<FORM METHOD="POST" ACTION="http://www.cse.iitk.ac.in/cgi-bin/atdot/options.pl" ENCTYPE="application/x-www-form-urlencoded">
<INPUT TYPE="hidden" NAME="SESSIONID" VALUE="33qmW.YG7a0Dc"><INPUT TYPE="submit" NAME="BUTTON" VALUE="Send a Message"></TD><TD WIDTH="33%" ALIGN="RIGHT" VALIGN="TOP">
<INPUT TYPE="submit" NAME="BUTTON" VALUE="Logout"></FORM></TD></TR></TABLE><CENTER><FONT SIZE="1">Powered by <A HREF="http://www.atdot.org/">AtDot</A></FONT><BR><BR><IMG SRC="/icons/bars/colorlin.gif"></CENTER></BODY></HTML>