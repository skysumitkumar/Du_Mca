%!PS-Adobe-2.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: sol2.dvi
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSCommandLine: dvips -o sol2.ps sol2.dvi
%DVIPSParameters: dpi=600, compressed, comments removed
%DVIPSSource:  TeX output 1999.03.03:2155
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (sol2.dvi)
@start /Fa 12 121 df<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0
A312011380120313005A120E5A1218123812300B1C798919>59 D<ED0180ED03C01507A2
1680150FA216005DA2151E153EA2153C157CA2157815F8A25D1401A25D1403A25D1407A2
5D140FA24AC7FCA2141E143EA2143C147CA2147814F8A25C1301A25C1303A25C1307A25C
130FA291C8FC5BA2131E133EA25BA2137813F8A25B1201A25B1203A25B1207A25B120FA2
90C9FC5AA2121E123EA2123C127CA2127812F8A25A1260225B7BC32D>61
D<EE3FF00303B5FC92391FC03FC092397E0007E0DA01F8EB01F8DA07E06D7E4A48147E02
3FC87E027EED1F804A16C0D903F8150F494816E0495A4948ED07F0A2494816F849C9FC5B
48481603A2484817FCA2485A000F17075B121FA25B123F19F84848160FA44848EE1FF0A3
F03FE0A390CAEA7FC0A2F0FF80A219004D5A1703604D5A6C7E4D5A4D5A003F5F4D5A6C6C
4BC7FC17FE6C6C4A5A4C5A6C6CEC07E06C6CEC1FC06C6C4A5A6C6C02FEC8FC90393F8003
F890390FE01FE00103B5C9FC9038007FF03E427BBF45>79 D<EC1F80ECFFE0903903F070
7090390FC039F890381F801D90383F000F017E5C5B00011407485A48485CA2485A001F14
0F5E485AA2151F007F5D5BA2153F00FF92C7FC90C7FCA25D92387E03805AA215FEEDFC07
007E0101140014035E6C0107130E140E3A1F801C7C1C000F13783A07C1F03E383A01FFC0
1FF03A007F0007C029297DA730>97 D<163EEEFFC0923803E1E0923807C0F0ED0F811687
ED1F8F160F153FA217E092387E038093C7FCA45DA514015DA30103B512FCA390260003F0
C7FCA314075DA4140F5DA5141F5DA4143F92C8FCA45C147EA414FE5CA413015CA4495AA3
5CEA1E07127F5C12FF495AA200FE90C9FCEAF81EEA703EEA7878EA1FF0EA07C02C537CBF
2D>102 D<EC01F8EC0FFE91383F07879139FC03DF80903801F801903903F000FFEB0FE0
4948EB7F005C133F49C7FC49147E5B000115FEA248485CA215011207495CA21503120F49
5CA21507A25E5B0007140FA24B5A6D133F0003147F000114FF6D485B0000EB03DF90387E
0F3FEB1FFCD907F090C7FC90C7FC5DA2157EA215FEA25D001C1301007F5C4813035D4A5A
4A5A48495A00F8017EC8FC387E01FC381FFFE0000390C9FC293B7FA72B>I<143C14FEA2
1301A314FCEB00701400AD137E3801FF803803C7C0EA0703000F13E0120E121C13071238
A2EA780F007013C0A2EAF01F14801200133F14005B137EA213FE5BA212015B0003130E13
F0A20007131EEBE01CA2143CEBC0381478147014E013C13803E3C03801FF00EA007C173E
7EBC1F>105 D<EB07F0EA03FF14E0A2EA000FA214C0A2131FA21480A2133FA21400A25B
A2137EA213FEA25BA21201A25BA21203A25BA21207A25BA2120FA25BA2121FA25BA2123F
A290C7FCA25AEB0380127EA212FE130700FC1300A25B130EA2EA7C1C133CEA3E38EA1FF0
EA07C014407DBE1B>108 D<D801F0D90FF0EB03F8D807FCD93FFEEB1FFFD80F1FD9F01F
90387C0F80000E903C03C00F80E007C0271E0F87009039C3C003E0001C018E903807C780
003C01DCDAEF007F003801F814EE4A14FCD8781F5D00705B4A5CA200F04949481307013F
60000090C75BA2041F140F4960017E5D191F043F5D13FE4992C7123F97C7FC5E00019538
7F01C049027E147EA204FEECFE03000306FC1380495C1A07030103F81300000761494A15
0E620303163C000FF07C78494AEC3FE0D80380D900E0EC0F804A297EA750>I<D801F0EB
0FF0D807FCEB3FFED80F1FEBF01F000E903903C00F80271E0F87007F001C018E1307003C
01DC80003813F85CEA781F00705B5CA200F049130F013F5D000090C7FCA2161F495D137E
163F94C7FC13FE495C167EA200019238FE03804914FCA203011307000303F813005B5FEE
F00E0007161E49151C5F1778000F6E6C5A49EC7FC0D80380021FC7FC31297EA737>I<EC
07F8EC7FFE903901FC0F80903907E007E090390FC003F090393F8001F8EB7F0001FEEB00
FC485A484814FEA2485A120F5B001F15FF485AA2ED01FE127F5BA2150300FF15FC90C7FC
A2ED07F8A2ED0FF0A2007E15E0007FEC1FC0ED3F80A26CEC7F006C6C13FC4A5A6C6C485A
3907E00FC02601F03FC7FC3800FFFCEB1FE028297DA72C>I<D901F8133FD907FEEBFFE0
903A1E0F83C0F0903A3807C780F890397003CF0301E013FED801C0EBFC071203018013F8
D8070015F0EE01C0000E4AC7FCA2001E1307A2C75BA2140F5DA3141F5DA3143F92380001
C0A34A1303001E1680003F017E1307267F80FE14005ED8FF81141ED901DF131CD8FE035C
3A7C078F80F03A3C0F07C1E03A1FFC03FF802707F0007EC7FC2D297EA734>120
D E /Fb 9 57 df<14FF010713E090381F81F890383E007C01FC133F4848EB1F8049130F
4848EB07C04848EB03E0A2000F15F0491301001F15F8A2003F15FCA390C8FC4815FEA548
15FFB3A46C15FEA56D1301003F15FCA3001F15F8A26C6CEB03F0A36C6CEB07E0000315C0
6D130F6C6CEB1F806C6CEB3F00013E137C90381F81F8903807FFE0010090C7FC28447CC1
31>48 D<143014F013011303131F13FFB5FC13E713071200B3B3B0497E497E007FB6FCA3
204278C131>I<EB03FE90381FFFC0017F13F03901F80FFC3903C001FE48486C7E000EC7
EA7F8048EC3FC0ED1FE04815F00030140F007015F800601407126CB415FC7F7F1503A46C
4813076CC7FCC8FC16F8A2150F16F0151F16E0A2ED3FC0ED7F8016005D5D4A5A4A5A4A5A
5D4A5A4A5A4AC7FC147C5C5C495A495A495A49C7120C131E5B013814185B5B485A484814
3848C81230000E1570001FB612F0A25A5AB712E0A326427BC131>I<49B4FC010F13E001
3F13FC9038FE01FE3A01F0007F80D803C0EB3FC048C7EA1FE0120EED0FF0EA0FE0486C14
F8A215077F5BA26C48130FEA03C0C813F0A3ED1FE0A2ED3FC01680ED7F0015FE4A5AEC03
F0EC1FC0D90FFFC7FC15F090380001FCEC007FED3F80ED1FC0ED0FE016F0ED07F816FC15
0316FEA2150116FFA3121EEA7F80487EA416FE491303A2007EC713FC00701407003015F8
0038140F6C15F06CEC1FE06C6CEB3FC0D803E0EB7F803A01FE01FE0039007FFFF8010F13
E0010190C7FC28447CC131>I<ED0380A21507150FA2151F153FA2157F15FFA25CEC03BF
153F14071406140C141C141814301470146014C013011480EB03005B13065B131C13185B
1370136013E0485A5B120390C7FC1206120E120C5A123812305A12E0B812C0A3C8383F80
00ADEDFFE0027FEBFFC0A32A437DC231>I<000615C0D807C0130701FCEB7F8090B61200
5D5D5D15E0158026063FFCC7FC90C9FCAE14FF010713C090381F01F090383800FC01F013
7ED807C07F49EB1F8016C090C7120F000615E0C8EA07F0A316F81503A216FCA5123E127F
487EA416F890C712075A006015F0A20070140F003015E00038EC1FC07E001EEC3F806CEC
7F006C6C13FE6C6C485A3901F807F039007FFFE0011F90C7FCEB07F826447BC131>I<EC
07FCEC3FFF91B512C0903903FC03E0903907E000F0D91FC0133849C71258017EEB01FC01
FE1303491307485A485AA24848EB03F8000FEC01F092C7FC485AA3485AA3127FA2903800
7F80903801FFF090380780FC39FF0E003E49EB1F8049EB0FC049EB07E0136001E0EB03F0
4914F8150116FC5BED00FEA390C812FFA47EA57F123FA216FE121F15016D14FC120FED03
F86C7EED07F06C6C14E06C6CEB0FC06C6CEB1F80017EEB3F0090383F80FE90380FFFF801
0313E00100138028447CC131>I<121CA2EA1F8090B712C0A3481680A217005E0038C812
0C0030151C00705D0060153016705E5E4814014B5A4BC7FCC81206150E5D151815385D15
6015E04A5AA24A5A140792C8FC5CA25C141E143EA2147E147CA214FCA21301A3495AA413
07A6130FAA6D5AEB01C02A457BC231>I<14FF010713E0011F13F890387F00FE01FC133F
D801F0EB1F804848EB0FC049EB07E00007EC03F048481301A290C713F8481400A47FA26D
130116F07F6C6CEB03E013FC6C6CEB07C09039FF800F806C9038C01F006CEBF03EECF878
39007FFEF090383FFFC07F01077F6D13F8497F90381E7FFFD97C1F1380496C13C02601E0
0313E048486C13F000079038007FF84848EB3FFC48C7120F003EEC07FE150148140016FF
167F48153FA2161FA56C151E007C153EA2007E153C003E157C6C15F86DEB01F06C6CEB03
E06C6CEB07C0D803F8EB1F80C6B4EBFF0090383FFFFC010F13F00101138028447CC131>
I E /Fc 58 122 df<4AB4EB0FE0021F9038E03FFC913A7F00F8FC1ED901FC90383FF03F
D907F090397FE07F80494801FF13FF4948485BD93F805C137F0200ED7F00EF003E01FE6D
91C7FC82ADB97EA3C648C76CC8FCB3AE486C4A7E007FD9FC3FEBFF80A339407FBF35>11
D<4AB4FC021F13C091387F01F0903901FC0078D907F0131C4948133E494813FF49485A13
7F1400A213FE6F5A163893C7FCAA167FB8FCA33900FE00018182B3AC486CECFF80007FD9
FC3F13FEA32F407FBF33>I<4AB47E021F13F791387F00FFEB01F8903807F001EB0FE0EB
1FC0EB3F80137F14008101FE80AEB8FCA3C648C77EB3AE486CECFF80007FD9FC3F13FEA3
2F407FBF33>I<4AB4ECFF80021FD9C00F13E0913B7F01F03F80F8903C01F80078FE003C
D907F0D93FF8130E49484948131F49484948EB7F804948484913FF137F02005CA201FE92
C7FC6FED7F0070141C96C7FCAAF13F80BBFCA3C648C76CC7FC197F193FB3AC486C4A6CEB
7FC0007FD9FC3FD9FE1FB5FCA348407FBF4C>I<121EEA7F80EAFFC0A9EA7F80ACEA3F00
AC121EAB120CC7FCA8121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A4179C019>33
D<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A312011380120313005A
120E5A1218123812300B1C79BE19>39 D<1430147014E0EB01C0EB03801307EB0F00131E
133E133C5B13F85B12015B1203A2485AA2120F5BA2121F90C7FCA25AA3123E127EA6127C
12FCB2127C127EA6123E123FA37EA27F120FA27F1207A26C7EA212017F12007F13787F13
3E131E7FEB07801303EB01C0EB00E014701430145A77C323>I<12C07E12707E7E121E7E
6C7E7F12036C7E7F12007F1378137CA27FA2133F7FA21480130FA214C0A3130714E0A613
0314F0B214E01307A614C0130FA31480A2131F1400A25B133EA25BA2137813F85B12015B
485A12075B48C7FC121E121C5A5A5A5A145A7BC323>I<1506150FB3A9007FB912E0BA12
F0A26C18E0C8000FC9FCB3A915063C3C7BB447>43 D<121EEA7F8012FF13C0A213E0A312
7FEA1E601200A413E013C0A312011380120313005A120E5A1218123812300B1C798919>
I<B512FEA617067F961E>I<121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A798919>I<EB
01C013031307131F137FEA07FFB5FC139FEAF81F1200B3B3ACEB7FF0B612F8A31D3D78BC
2D>49 D<EB07FC90383FFF8090B512E03903F01FF83907C007FC390F0001FE001E6D7E00
1C1580003CEC7FC05AED3FE01270B4FC6DEB1FF07FA56C5A6CC7FC120CC813E0153FA216
C0157F168015FF16004A5A5D4A5A4A5A5D4A5A4A5A4AC7FC147E147C5C495A495A495A49
5A49C71270133E133C5B4914E0485A485A485A48C7120148B6FCA25A4815C0B7FCA3243D
7CBC2D>I<EB07FC90383FFF809038F80FE03901E003F839078001FCD80F007F000E6D7E
001E1580D81F80137F486C14C07FA27F5BA2121F6C5AC8138015FF1600A24A5AA24A5A5D
EC07E04A5A023FC7FCEB1FFCECFF809038000FE0EC07F86E7E6E7E6E7E1680ED7FC0A216
E0153FA216F0A2120C123F487E487EA316E0A249137F6CC713C01278EDFF807E6C491300
6C495A3907C007FC3903F80FF0C6B55A013F1380D907F8C7FC243F7CBC2D>I<150E151E
153EA2157EA215FE1401A21403EC077E1406140E141CA214381470A214E0EB01C0A2EB03
80EB0700A2130E5BA25B5BA25B5B1201485A90C7FC5A120E120C121C5AA25A5AB8FCA3C8
EAFE00AC4A7E49B6FCA3283E7EBD2D>I<00061403D80780131F01F813FE90B5FC5D5D5D
15C092C7FC14FCEB3FE090C9FCACEB01FE90380FFF8090383E03E090387001F8496C7E49
137E497F90C713800006141FC813C0A216E0150FA316F0A3120C127F7F12FFA416E090C7
121F12FC007015C012780038EC3F80123C6CEC7F00001F14FE6C6C485A6C6C485A3903F8
0FE0C6B55A013F90C7FCEB07F8243F7CBC2D>I<EC1FE0ECFFF8903803F03E90380FC00F
90391F000780133E017EEB1FC049133F4848137F12035B12074848EB3F80ED1F00001F91
C7FC5BA2123FA3485AA214FE903887FF8039FF8F07E090389C01F09038B800FC01B0137E
13F0497F16804914C0A2ED1FE0A34914F0A5127FA6123F6D14E0A2121FED3FC0A26C6C14
80A20007EC7F006C6C137E6C6C5B6C6C485A90387E07F06DB45A010F1380D903FCC7FC24
3F7CBC2D>I<1238123C123F90B612FCA316F85A16F016E00078C712010070EC03C0ED07
8016005D48141E151C153C5DC8127015F04A5A5D14034A5A92C7FC5C141EA25CA2147C14
7814F8A213015C1303A31307A3130F5CA2131FA6133FAA6D5A0107C8FC26407BBD2D>I<
007FB912E0BA12F0A26C18E0CDFCAE007FB912E0BA12F0A26C18E03C167BA147>61
D<15074B7EA34B7EA34B7EA34B7EA34B7E15E7A2913801C7FC15C3A291380381FEA34AC6
7EA3020E6D7EA34A6D7EA34A6D7EA34A6D7EA34A6D7EA349486D7E91B6FCA24981913880
0001A249C87EA24982010E157FA2011E82011C153FA2013C820138151FA2017882170F13
FC00034C7ED80FFF4B7EB500F0010FB512F8A33D417DC044>65 D<B712FCEEFF8017F000
01903980000FF86C6CC7EA03FE707E701380EF7FC0EF3FE0A2EF1FF0A218F8A3170F171F
A318F0A2EF3FE0177F18C0EFFF804C1300EE03FCEE0FF8EE7FE091B6C7FC17E091C7EA07
FCEE01FE933800FF80EF7FC0EF3FE0EF1FF018F8170F18FC1707A218FEA718FC170FA2EF
1FF818F0173FEF7FE0EFFFC00403138048486C90380FFE00B85A17E094C7FC373E7DBD40
>I<B912E0A300019038C000016C6C48EB001FEF0FF01703A217011700A31870A4183816
1CA41800A2163CA2167C16FC150391B5FCA3EC80031500167C163CA2161CA21807A3180E
93C7FCA4181E181CA2183CA2187CA218F8170117031707171F48486CEB01FFB912F0A338
3E7DBD3E>69 D<B91280A300019038C000036C6C48EB007FEF1FC0170F1707A21703A317
01A4EF00E0A21638A31800A31678A216F81501150791B5FCA3EC8007150115001678A216
38A693C8FCAF3801FFE0B612F0A3333E7DBD3B>I<B6D8C01FB512F8A3000101E0C7383F
FC0026007F80EC0FF0B3A691B7FCA30280C7120FB3A92601FFE0EC3FFCB6D8C01FB512F8
A33D3E7DBD44>72 D<B612F0A3C6EBF000EB3FC0B3B3B2EBFFF0B612F0A31C3E7EBD21>
I<B612F8A3000101E0C9FC38007F80B3B0EF0380A517071800A45FA35FA25F5F5F4C5A16
0748486C133FB8FCA3313E7DBD39>76 D<B56C91B512F88080D8007F030713006EEC01FC
6E6E5A1870EB77FCEB73FEA2EB71FF01707FA26E7E6E7EA26E7E6E7EA26E7E6E7EA26E7E
6E7FA26F7E6F7EA26F7E6F7EA26F7E6F7EA26F7E6F1380A2EE7FC0EE3FE0A2EE1FF0EE0F
F8A2EE07FCEE03FEA2EE01FF7013F0A2177F173FA2171F170FA2170701F81503487ED807
FF1501B500F81400A218703D3E7DBD44>78 D<ED7FE0913807FFFE91391FC03F8091397E
0007E04948EB03F8D907F0EB00FE4948147F49486E7E49486E7E49C86C7E01FE6F7E0001
8349150300038348486F7EA248486F7EA2001F188049167F003F18C0A3007F18E049163F
A300FF18F0AC007F18E06D167FA4003F18C0A26C6CEEFF80A36C6C4B1300A26C6C4B5A00
035F6D150700015F6C6C4B5A6D5E6D6C4A5A6D6C4A5A6D6C4AC7FC6D6C14FED901FCEB03
F8D9007FEB0FE091391FC03F80912607FFFEC8FC9138007FE03C427BBF47>I<D907FC13
0C90391FFF801C017FEBF03C3901FC03F83A03F0007E7CD807C0EB1FFC4848130F001F14
0748C71203003E1401007E1400A2007C157C12FCA2163CA36C151CA27EA26C6C14007F7F
EA3FF8EBFF806C13F86CEBFF806C14F06C14FC6C14FF6C15C0013F14E0010714F0EB007F
020713F89138007FFC150FED07FE15031501ED00FFA200E0157FA3163FA27EA3163E7E16
7E6C157C6C15FC6C15F86D13016DEB03F06DEB07E0D8F9FCEB0FC03AF07F803F8090391F
FFFE00D8E00713F839C0007FC028427BBF33>83 D<003FB91280A3903AF0007FE0010180
90393FC0003F48C7ED1FC0007E1707127C00781703A300701701A548EF00E0A5C81600B3
B14B7E4B7E0107B612FEA33B3D7DBC42>I<B691380FFFFEA3000301E0020113E06C0180
9138007F806CEF3F00017F163E181C6E153C013F1638A26E1578011F1670A26D6C5DA26E
140101075EA26E140301035EA26D6C4AC7FCA2806D150EA26F131E027F141CA26F133C02
3F1438A26E6C5BA26F13F0020F5CA2EDF80102075CA26E6C485AA2EDFE07020191C8FCA2
6F5A6E130EA2ED7F9CA216DCED3FF8A36F5AA36F5AA26F5AA36F5A3F407EBD44>86
D<B500FE017FB5D88007B5FCA3000301C0010101E0C713F86C90C849EC3FE07148EC0F80
7E7215006E143F017F190E84A26D6C60A24D7E6D6C60A2EFE7F86D6C60A2933801C3FC6E
18F001076104037F6E0281140101036104077F17006D6C4D5AA2040EEB7F806D6C4DC7FC
A24CEB3FC0DA7F80160EA24CEB1FE003C0161E023F171C047814F0DBE070010F133C021F
173804F014F84C1307DA0FF05EA2DBF1C0EB03FCDA07F95EA2DBFB80EB01FEDA03FF6F5A
A293C8FCA26E5FA24B157F020094C8FCA24B81037C153EA20378151E0338151C58407EBD
5D>I<B66C0103B51280A3000101F0C8EBF8006C6C48ED3FC0725A013F041EC7FC6D7E60
6D6C15386D6C1578606D6C5D6E14016D5E6D6D1303606E6C49C8FC6E6C5B170E6E6C131E
171C6E6C5B6E6C137817706E6C13F06F5B6E13016EEB83C05FED7FC7DB3FE7C9FC16EFED
1FFE5E150F6F5AB3A4ED1FFC020FB512FCA3413E7FBD44>89 D<EB0FF8EBFFFE3903F01F
8039078007E0000F6D7E9038E001F8D81FF07F6E7EA3157F6C5AEA0380C8FCA4EC1FFF01
03B5FC90381FF87FEB7F803801FC00EA07F8EA0FE0485A485AA248C7FCEE038012FEA315
FFA3007F5BEC03BF3B3F80071F8700261FC00E13CF3A07F03C0FFE3A01FFF807FC3A003F
C001F0292A7DA82D>97 D<EA01FC12FFA3120712031201B1EC03FC91381FFF8091387C07
E09039FDE001F09039FFC000FC4A137E91C77E49158049141F17C0EE0FE0A217F0A21607
17F8AA17F0A2160FA217E0161F17C06D1580EE3F006D5C6E13FE9039F3C001F89039F1E0
03F09039E0780FC09026C03FFFC7FCC7EA07F82D407EBE33>I<49B4FC010F13E090383F
00F8017C131E4848131F4848137F0007ECFF80485A5B121FA24848EB7F00151C007F91C7
FCA290C9FC5AAB6C7EA3003FEC01C07F001F140316806C6C13076C6C14000003140E6C6C
131E6C6C137890383F01F090380FFFC0D901FEC7FC222A7DA828>I<ED01FC15FFA31507
15031501B114FF010713E190381F80F990387E003D49131FD803F81307485A4913034848
1301121F123F5B127FA290C7FCA25AAA7E7FA2123FA26C7E000F14037F000714076C6C49
7E6C6C497ED8007C017913F890383F01F190380FFFC1903A01FE01FC002D407DBE33>I<
EB01FE90380FFFC090383F03F09038FC01F848486C7E4848137E48487F000F158049131F
001F15C04848130FA2127F16E090C7FCA25AA290B6FCA290C9FCA67EA27F123F16E06C7E
1501000F15C06C6C13036DEB07806C6C1400C66C131E017E5B90381F80F8903807FFE001
0090C7FC232A7EA828>I<EC1FC0EC7FF8903801F83C903807E07E90380FC0FFEB1FC1EB
3F811401137FEC00FE01FE137C1500AEB6FCA3C648C7FCB3AE487E007F13FFA320407EBF
1C>I<167C903903F801FF903A1FFF078F8090397E0FDE1F9038F803F83803F001A23B07
E000FC0600000F6EC7FC49137E001F147FA8000F147E6D13FE00075C6C6C485AA23901F8
03E03903FE0FC026071FFFC8FCEB03F80006CAFC120EA3120FA27F7F6CB512E015FE6C6E
7E6C15E06C810003813A0FC0001FFC48C7EA01FE003E140048157E825A82A46C5D007C15
3E007E157E6C5D6C6C495A6C6C495AD803F0EB0FC0D800FE017FC7FC90383FFFFC010313
C0293D7EA82D>I<EA01FC12FFA3120712031201B1EC01FE913807FFC091381E07E09138
7803F09138E001F8D9FDC07F148001FF6D7E91C7FCA25BA25BB3A6486C497EB5D8F87F13
FCA32E3F7DBE33>I<EA01E0EA07F8A2487EA46C5AA2EA01E0C8FCACEA01FC127FA31207
12031201B3AC487EB512F0A3143E7DBD1A>I<EA01FC12FFA3120712031201B292B51280
A392383FFC0016E0168093C7FC153C5D5D4A5AEC07C04A5A4AC8FC143E147F4A7E13FD90
38FFDFC0EC9FE0140F496C7E01FC7F496C7E1401816E7E81826F7E151F826F7EA282486C
14FEB539F07FFFE0A32B3F7EBE30>107 D<EA01FC12FFA3120712031201B3B3B1487EB5
12F8A3153F7DBE1A>I<2701F801FE14FF00FF902707FFC00313E0913B1E07E00F03F091
3B7803F03C01F80007903BE001F87000FC2603F9C06D487F000101805C01FBD900FF147F
91C75B13FF4992C7FCA2495CB3A6486C496CECFF80B5D8F87FD9FC3F13FEA347287DA74C
>I<3901F801FE00FF903807FFC091381E07E091387803F000079038E001F82603F9C07F
0001138001FB6D7E91C7FC13FF5BA25BB3A6486C497EB5D8F87F13FCA32E287DA733>I<
14FF010713E090381F81F890387E007E01F8131F4848EB0F804848EB07C04848EB03E000
0F15F04848EB01F8A2003F15FCA248C812FEA44815FFA96C15FEA36C6CEB01FCA3001F15
F86C6CEB03F0A26C6CEB07E06C6CEB0FC06C6CEB1F80D8007EEB7E0090383F81FC90380F
FFF0010090C7FC282A7EA82D>I<3901FC03FC00FF90381FFF8091387C0FE09039FDE003
F03A03FFC001FC6C496C7E91C7127F49EC3F805BEE1FC017E0A2EE0FF0A3EE07F8AAEE0F
F0A4EE1FE0A2EE3FC06D1580EE7F007F6E13FE9138C001F89039FDE007F09039FC780FC0
DA3FFFC7FCEC07F891C9FCAD487EB512F8A32D3A7EA733>I<02FF131C0107EBC03C9038
1F80F090397F00387C01FC131CD803F8130E4848EB0FFC150748481303121F485A150148
5AA448C7FCAA6C7EA36C7EA2001F14036C7E15076C6C130F6C7E6C6C133DD8007E137990
383F81F190380FFFC1903801FE0190C7FCAD4B7E92B512F8A32D3A7DA730>I<3901F807
E000FFEB1FF8EC787CECE1FE3807F9C100031381EA01FB1401EC00FC01FF1330491300A3
5BB3A5487EB512FEA31F287EA724>I<90383FC0603901FFF8E03807C03F381F000F003E
1307003C1303127C0078130112F81400A27E7E7E6D1300EA7FF8EBFFC06C13F86C13FE6C
7F6C1480000114C0D8003F13E0010313F0EB001FEC0FF800E01303A214017E1400A27E15
F07E14016C14E06CEB03C0903880078039F3E01F0038E0FFFC38C01FE01D2A7DA824>I<
131CA6133CA4137CA213FCA2120112031207001FB512C0B6FCA2D801FCC7FCB3A215E0A9
12009038FE01C0A2EB7F03013F138090381F8700EB07FEEB01F81B397EB723>I<D801FC
14FE00FF147FA3000714030003140100011400B3A51501A31503120015076DEB06FF017E
010E13806D4913FC90381FC078903807FFE00100903880FE002E297DA733>I<B539E00F
FFE0A32707FE000313006C48EB00FC5E00015D7F00005DA26D13016D5CA26D6C485AA2EC
C007011F91C7FCA290380FE00EA2ECF01E0107131CA26D6C5AA2ECFC7801011370A2ECFE
F001005BA2EC7FC0A36E5AA26EC8FCA3140E2B287EA630>I<B53BC3FFFE03FFF8A3290F
FE003FE00013C06C486D48EB3F806C4817006D010F141E00016F131C15076D163C00004A
6C1338A2017F5E4B7E151DD93F805DED3DFC1538D91FC04A5AED78FE9238707E03D90FE0
017F5BEDE03F02F0140701070387C7FC9138F1C01F02F9148F010315CE9138FB800F02FF
14DE6D15FCED00076D5DA24A1303027E5CA2027C1301023C5C023813003D287EA642>I<
B539F01FFFE0A30003D9C00F1300C690388007F8D97F0013E002805BD93FC05B011F49C7
FC90380FE00EECF01E6D6C5A01035B6D6C5A6E5AEB00FF6E5A6E5A81141F814A7E81147B
ECF1FC903801E1FEECC0FF01037F49486C7ED90F007F011E6D7E013E130F496D7E01FC80
486C80000F4A7EB539803FFFF8A32D277FA630>I<B539E00FFFE0A32707FE000313006C
48EB01FC6F5A00015D7F00005DA2017F495AA2EC8003013F5CA26D6C48C7FCA26E5A010F
130EA26D6C5AA2ECF83C01031338A26D6C5AA2ECFEF001005BA2EC7FC0A36E5AA36EC8FC
A2140EA2141E141C143C1438A2147800181370127EB45BA2495AA248485AD87E07C9FCEA
780EEA3C3CEA1FF8EA07E02B3A7EA630>I E /Fd 25 118 df<151E153E157E15FCEC01
F8EC07F0EC0FE0EC1FC01580143FEC7F0014FE1301495A5C1307495AA2495A133F5C137F
A2495AA24890C7FCA25A5BA21207A2485AA3121F5BA3123FA25BA3127FA55B12FFB3A312
7F7FA5123FA37FA2121FA37F120FA36C7EA21203A27F7EA26C7FA26D7EA2133F80131F6D
7EA26D7E1303806D7E1300147FEC3F80141F15C0EC0FE0EC07F0EC01F8EC00FC157E153E
151E1F7973D934>40 D<127012F8127C127E7EEA1FC06C7E6C7E12037F6C7E6C7E7F6D7E
133F806D7EA26D7E80130780A26D7EA26D7EA215807FA215C0A2EC7FE0A315F0143FA315
F8A2141FA315FCA5140F15FEB3A315FC141FA515F8A3143FA215F0A3147F15E0A3ECFFC0
A21580A25B1500A2495AA2495AA25C130F5C495AA2495A5C137F49C7FC5B485A485A5B12
07485A485A48C8FC127E127C5A12701F7979D934>I<B712F0AB240B7F9F2D>45
D<EA07F0487E487E487E487EB51280A76C13006C5A6C5A6C5A6C5A1111769025>I<9138
03FFC0023F13FC91B6FC010315C0010F018113F0903A1FFC003FF849486D7E49486D7E49
486D7E48496D138048496D13C0A24817E04890C813F0A34817F8A24817FC49157FA3007F
17FEA600FF17FFB3A5007F17FEA6003F17FCA26D15FFA26C17F8A36C17F0A26C6D4913E0
A26C6D4913C06C17806E5B6C6D4913006D6C495AD91FFCEB3FF8903A0FFF81FFF06D90B5
5A01011580D9003F01FCC7FC020313C0384F7BCD43>48 D<EC3FFE0103B512E0010F14FC
013F14FF90B712C048D9C07F7F2703FE000F13F8D807F801037FD80FE06D7F48486D7F48
488001F01680486C6E13C07F486C6E13E07FA27013F0A56C5AA26C5AEA0FF0EA03C0C914
E05EA218C05E1880A24C13005F4C5A4B5B5F4B5B5F4B5B4B90C7FC4B5A5E4B5AED7FE04B
5A4A5B4A48C8FC4A5A5D4A48EB01F04A5AEC3F804AC7FC02FEEC03E0495A495A495A495A
D91F80140749C8FC013E150F017FB7FC90B812C05A5A5A5A5A5A5AB9FC1880A4344E79CD
43>50 D<91380FFFC091B512FC0107ECFF80011F15E090263FF8077F9026FF800113FC48
48C76C7ED803F86E7E491680D807FC8048B416C080486D15E0A4805CA36C17C06C5B6C90
C75AD801FC1680C9FC4C13005FA24C5A4B5B4B5B4B13C04B5BDBFFFEC7FC91B512F816E0
16FCEEFF80DA000713E0030113F89238007FFE707E7013807013C018E07013F0A218F8A2
7013FCA218FEA2EA03E0EA0FF8487E487E487EB57EA318FCA25E18F891C7FC6C17F0495C
6C4816E001F04A13C06C484A1380D80FF84A13006CB44A5A6CD9F0075BC690B612F06D5D
011F1580010302FCC7FCD9001F1380374F7ACD43>I<177C17FEA2160116031607160FA2
161F163F167FA216FF5D5DA25D5DED1FBFED3F3F153E157C15FCEC01F815F0EC03E01407
EC0FC01580EC1F005C147E147C5C1301495A495A5C495A131F49C7FC133E5B13FC485A5B
485A1207485A485A90C8FC123E127E5ABA12C0A5C96C48C7FCAF020FB712C0A53A4F7CCE
43>I<D80380150ED807E0157E01FEEC03FED9FFF0137F91B65A5F5F5F5F5F94C7FC5E5E
16F016C093C8FC15F801E190C9FC01E0CAFCABEC0FFF027F13F001E3B512FE01E76E7E90
26FFF8077FDAC0017F49C713F8496E7E49143F4981496E7E6C481680C9FC18C08218E0A4
18F0A3EA0FE0487E487E487E487EA418E0A35B6C484A13C05B491680003EC85A003F1700
6C6C4A5A6D5D6C6C4A5AD807F8495BD803FE01075B2701FFC03F5B6C90B65A013F4AC7FC
6D14F8010314C09026007FF8C8FC344F79CD43>I<EA07F0487E487E487E487EB51280A7
6C13006C5A6C5A6C5A6C5AC8FCB3EA07F0487E487E487E487EB51280A76C13006C5A6C5A
6C5A6C5A113576B425>58 D<BA7E19FCF1FF801AF01AFCD8000701F0C7000F13FF060014
C0071F7F070713F807017F737F747E747F747F86747F747F8886888688A2757EA31D8087
A21DC0A51DE0A387A963A31DC0A51D80A2631D00A3515AA2646264505B6264505B505B50
90C7FCF2FFFE4F5B07075B071F5B96B512C0060F91C8FCBB5A1AF01AC007FCC9FC19805B
527CD167>68 D<BC1280A5D8000701F8C7000114C0F0001F19071901851A7F1A3F1A1FA2
F20FE0A21A07A31A03A318F81BF01A01A497C7FC1701A317031707170F177F92B6FCA592
38F8007F170F170717031701A317001B3EA31B7CA395C8FCA21BFCA21BF8A21A01A31A03
1BF01A071A0FA21A1F1A3FF27FE0F101FF1907191F0603B5FCBCFCA21BC0A34F517CD058
>I<B600FC073FB512FE6F61A26F96B6FCA2D80007F5C00070EF01EFA202EF6DEF03CFA2
02E76DEF078FA202E36DEF0F0FA202E16D171EA302E06D173CA26F6C1778A26F6C17F0A2
6F6DED01E0A26F6DED03C0A36F6DED0780A26F6DED0F00A26F6D151EA26F6D5DA3706C5D
A2706C5DA2706D495AA2706D495AA2706D495AA3706D49C7FCA2706D131EA2706D5BA271
6C5BA3716C5BA271EB81E0A271EBC3C0A271EBE780A27101FFC8FCA3715BA2715BA2725A
A2725AA2D93FFC6F5AB74DB712FEA2725AA2725A77527CD180>77
D<91260FFF80130791B500F85B010702FF5B011FEDC03F49EDF07F9026FFFC006D5A4801
E0EB0FFD4801800101B5FC4848C87E48488149150F001F824981123F4981007F82A28412
FF84A27FA26D82A27F7F6D93C7FC14C06C13F014FF15F86CECFF8016FC6CEDFFC017F06C
16FC6C16FF6C17C06C836C836D826D82010F821303010082021F16801400030F15C0ED00
7F040714E01600173F050F13F08383A200788200F882A3187FA27EA219E07EA26CEFFFC0
A27F6D4B13806D17006D5D01FC4B5A01FF4B5A02C04A5A02F8EC7FF0903B1FFFC003FFE0
486C90B65AD8FC0393C7FC48C66C14FC48010F14F048D9007F90C8FC3C5479D24B>83
D<EC7FFF0107B512F0013F14FE90B77E48D9E00F7F2703FE000113F0486C6D7F6EEB3FFC
48826E131F83707FA36C496D7FA26C90C7FC6C5AC9FCA6037FB5FC020FB6FC91B7FC0107
1487013FEBF0074913803901FFFC004813F0485B485B485B4890C7FC5A5BA2485AA45EA2
6D5C007F151D163D6C6C02797F6C6D01F113F86C9026C003E1EBFFE06C9026F81FC014F0
6C90B5487EC6ED001F011F01FC010713E0010101E090C8FC3C387CB641>97
D<913801FFF8021FEBFF8091B612F0010315FC010F9038C00FFE903A1FFE0001FFD97FFC
491380D9FFF05B4817C048495B5C5A485BA2486F138091C7FC486F1300705A4892C8FC5B
A312FFAD127F7FA27EA2EF03E06C7F17076C6D15C07E6E140F6CEE1F806C6DEC3F006C6D
147ED97FFE5C6D6CEB03F8010F9038E01FF0010390B55A01001580023F49C7FC020113E0
33387CB63C>99 D<913803FFC0023F13FC49B6FC010715C04901817F903A3FFC007FF849
486D7E49486D7E4849130F48496D7E48178048497F18C0488191C7FC4817E0A248815B18
F0A212FFA490B8FCA318E049CAFCA6127FA27F7EA218E06CEE01F06E14037E6C6DEC07E0
A26C6DEC0FC06C6D141F6C6DEC3F806D6CECFF00D91FFEEB03FE903A0FFFC03FF8010390
B55A010015C0021F49C7FC020113F034387CB63D>101 D<137F497E000313E0487FA248
7FA76C5BA26C5BC613806DC7FC90C8FCADEB3FF0B5FCA512017EB3B3A6B612E0A51B547B
D325>105 D<EB3FF0B5FCA512017EB3B3B3B1B612F0A51C537BD225>108
D<D93FF0EB1FFCB591B512C0030314F0030F8092391FE07FFC92393F001FFE0003027C80
C602F07FDAF1E081ECF3C0DAF7807F8502FFC7FC5CA25CA45CB3ACB6D8F807B612C0A542
367BB54B>110 D<913801FFE0021F13FE91B612C0010315F0010F9038807FFC903A1FFC
000FFED97FF86D6C7E49486D7F48496D7F48496D7F4A147F48834890C86C7EA24883A248
486F7EA3007F1880A400FF18C0AC007F1880A3003F18006D5DA26C5FA26C5F6E147F6C5F
6C6D4A5A6C6D495B6C6D495B6D6C495BD93FFE011F90C7FC903A0FFF807FFC6D90B55A01
0015C0023F91C8FC020113E03A387CB643>I<90397FE003FEB590380FFF80033F13E04B
13F09238FE1FF89139E1F83FFC0003D9E3E013FEC6ECC07FECE78014EF150014EE02FEEB
3FFC5CEE1FF8EE0FF04A90C7FCA55CB3AAB612FCA52F367CB537>114
D<903903FFF00F013FEBFE1F90B7FC120348EB003FD80FF81307D81FE0130148487F4980
127F90C87EA24881A27FA27F01F091C7FC13FCEBFFC06C13FF15F86C14FF16C06C15F06C
816C816C81C681013F1580010F15C01300020714E0EC003F030713F015010078EC007F00
F8153F161F7E160FA27E17E07E6D141F17C07F6DEC3F8001F8EC7F0001FEEB01FE9039FF
C00FFC6DB55AD8FC1F14E0D8F807148048C601F8C7FC2C387CB635>I<143EA6147EA414
FEA21301A313031307A2130F131F133F13FF5A000F90B6FCB8FCA426003FFEC8FCB3A9EE
07C0AB011FEC0F8080A26DEC1F0015806DEBC03E6DEBF0FC6DEBFFF86D6C5B021F5B0203
13802A4D7ECB34>I<D93FF8913801FFC0B50207B5FCA50003ED001FC61607B3AE5FA35F
A2017F5D173B177B6D6C14F3DC01E313F06D6CD907C3EBFFC0903A0FFFC03F836D90B512
03010114FE6D6C13F8020701E091C7FC42377BB54B>I E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: a4

%%EndSetup
%%Page: 1 1
1 0 bop 361 -292 a Fd(SEM520.3)46 b(\(Data)g(Structures\):)60
b(Solutions)46 b(-)e(slot)i(4)-243 182 y Fc(1.)g(T)-8
b(rivial.)-243 356 y(2.)46 b(The)30 b(A)-10 b(VL)30 b(tree,)i(with)d
(detailed)g(explanations,)h(is)f(already)h(on)g(the)h(w)m(eb.)-243
531 y(3.)46 b(Y)-8 b(ou)33 b(ha)m(v)m(e)g(to)g(re\015ect)g(on)f(the)g
(fact)h(that)g(the)f(rotations)g(w)m(e)h(sa)m(w)f(are)h(enough)f(to)h
(treat)g(all)e(p)s(ossible)f(cases)j(when)-127 644 y(the)k(A)-10
b(VL-ness)36 b(should)f(b)s(e)h(rearranged)h(after)g(inserting)e(an)h
(elemen)m(t)h(\(whic)m(h)f(is)g(done)g(the)h(same)g(w)m(a)m(y)h(as)f
(in)e(a)-127 757 y(BTS\).)g(After)h(inserting)d(an)i(elemen)m(t,)i(the)
e(balance)g(factors)h(are)g(up)s(dated)e(from)g(the)i(lea)m(v)m(es)g
(to)m(w)m(ards)g(the)f(ro)s(ot)-127 869 y(of)h(the)f(tree,)j(to)f
(disco)m(v)m(er)f(if)e(a)i(subtree)f(of)h(the)g(tree)g(\(it)g(can)f(b)s
(e)g(the)h(tree)g(itself)7 b(\))35 b(b)s(ecame)h(un)m(balanced,)g
(i.e.,)i(if)-127 982 y(one)29 b(of)f(the)g(no)s(des)g(meets)h(the)f
(conditions)f(for)h(whic)m(h)f(a)i(rotation)f(applies.)39
b(Then,)27 b(if)h(suc)m(h)g(subtree)f(is)h(found)f(it)h(is)-127
1095 y(rebalanced)i(b)m(y)g(the)h(appropriate)e(rotation.)-127
1239 y(Y)-8 b(ou)31 b(ma)m(y)g(think)e(ab)s(out)h(the)g(fact)i(that)f
(a)f(single)f(no)s(de)h(insertion)f(can)h(mak)m(e)i(the)e(tree)h(un)m
(balanced)f(only)f(in)g(four)-127 1352 y(w)m(a)m(ys,)37
b(and)e(that)g(balance)g(factors)h(individuates)c(exactly)k(those)g
(four)e(w)m(a)m(ys...)56 b(That's)35 b(wh)m(y)g(w)m(e)g(rebalance)g
(the)-127 1465 y(tree)f(after)f(eac)m(h)h(insertion)e(\(if)g(needed\),)
i(and)e(not)i(at)f(the)h(end)e(of)h(all)f(the)h(insertions,)f(b)s
(ecause)h(a)h(di\013eren)m(t)e(and)-127 1578 y(more)e(complicated)h
(algorithm)e(has)h(to)h(b)s(e)f(designed)f(then.)-243
1752 y(4.)p 0 setgray 3 setlinewidth np 972 1862 37 0.00
360.00 arc fil 0 setgray np 972 1862 37 0.00 360.00 arc
st 3 setlinewidth np 972 1862 37 0.00 360.00 arc st 0 setgray
3 setlinewidth np 368 2315 37 0.00 360.00 arc fil 0 setgray
np 368 2315 37 0.00 360.00 arc st 3 setlinewidth np 368
2315 37 0.00 360.00 arc st 0 setgray 3 setlinewidth np
1576 2315 37 0.00 360.00 arc fil 0 setgray np 1576 2315
37 0.00 360.00 arc st 3 setlinewidth np 1576 2315 37
0.00 360.00 arc st 0 setgray 3 setlinewidth np 66 2768
37 0.00 360.00 arc fil 0 setgray np 66 2768 37 0.00 360.00
arc st 3 setlinewidth np 66 2768 37 0.00 360.00 arc st
0 setgray 3 setlinewidth np 670 2768 37 0.00 360.00 arc
fil 0 setgray np 670 2768 37 0.00 360.00 arc st 3 setlinewidth
np 670 2768 37 0.00 360.00 arc st 0 setgray 3 setlinewidth
np 1274 2768 37 0.00 360.00 arc fil 0 setgray np 1274
2768 37 0.00 360.00 arc st 3 setlinewidth np 1274 2768
37 0.00 360.00 arc st 0 setgray 3 setlinewidth np 1878
2768 37 0.00 360.00 arc fil 0 setgray np 1878 2768 37
0.00 360.00 arc st 3 setlinewidth np 1878 2768 37 0.00
360.00 arc st 0 setgray 3 setlinewidth np -85 3221 37
0.00 360.00 arc fil 0 setgray np -85 3221 37 0.00 360.00
arc st 3 setlinewidth np -85 3221 37 0.00 360.00 arc
st 0 setgray 3 setlinewidth np 519 3221 37 0.00 360.00
arc fil 0 setgray np 519 3221 37 0.00 360.00 arc st 3
setlinewidth np 519 3221 37 0.00 360.00 arc st 0 setgray
3 setlinewidth np 217 3221 37 0.00 360.00 arc fil 0 setgray
np 217 3221 37 0.00 360.00 arc st 3 setlinewidth np 217
3221 37 0.00 360.00 arc st 3 setlinewidth np 972 1862
a 368 2315 li 65 2768 li -85 3221 li st 3 setlinewidth
np 368 2315 a 669 2768 li 519 3221 li st 3 setlinewidth
np 1576 2315 a 1273 2768 li st 3 setlinewidth np 65 2768
a 216 3221 li st 3 setlinewidth np 972 1862 a 1576 2315
li 1878 2768 li st 783 1862 a Fb(80)217 2315 y(60)1374
b(70)-85 2768 y(50)770 b(30)204 b(10)771 b(40)179 3372
y(20)-400 b(5)555 b(25)-243 3552 y Fc(5.)46 b(W)-8 b(e)30
b(insert)d(the)h(new)g(elemen)m(t)h(as)g(the)f(last)g(elemen)m(t)h
(\(as)g(the)g(righ)m(tmost)f(leaf)g(in)f(the)i(tree,)h(whic)m(h)d
(corresp)s(onds)g(to)-127 3665 y(the)32 b(last)g(p)s(osition)e(in)h
(the)h(arra)m(y)g(implemen)m(tation\).)45 b(Then)31 b(if)g(this)g
(elemen)m(t)h(is)f(smaller)g(than)g(its)h(father)g(w)m(e)g(are)-127
3778 y(done,)e(otherwise)f(w)m(e)h(re-heap,)g(i.e.,)g(w)m(e)g(sw)m(ap)g
(the)g(elemen)m(t)g(with)e(its)h(father)h(and)f(so)h(on,)g(un)m(til)e
(it)h(is)g(the)g(c)m(hild)f(of)-127 3891 y(a)h(greater)h(father)f(\(in)
f(the)h(arra)m(y)-8 b(,)31 b(if)c Fa(i)i Fc(is)f(the)h(index)f(of)h
(the)g(elemen)m(t,)h(the)f(index)e(of)i(the)g(father)g(is)f
Fa(i=)p Fc(2,)j(where)d Fa(=)i Fc(is)-127 4003 y(the)h(in)m(teger)f
(division)e(that)j(appro)m(ximates)f(the)h(result)e(to)i(the)f
(greatest)j(in)m(teger)d(smaller)f(than)h(the)h(result\).)-243
4178 y(6.)46 b(As)27 b(heaps)f(are)i(only)d(ordered)i(from)f(top)h(to)h
(b)s(ottom)f(it)f(is)g(virtually)f(imp)s(ossible)e(to)28
b(searc)m(h)f(for)g(a)g(no)s(de)f(e\016cien)m(tly)-8
b(.)-127 4291 y(In)34 b(the)g(w)m(orst)h(case)g(w)m(e)g(ma)m(y)g(ha)m
(v)m(e)g(to)h(insp)s(ect)d(all)g(the)h(no)s(des)g(in)f(the)h(tree)i(to)
f(\014nd)d(a)j(particular)e(no)s(de.)52 b(Hence)-127
4404 y(searc)m(hing)36 b(in)f(a)i(heap)f(has)g(w)m(orst)h(and)f(a)m(v)m
(erage)j(case)e(complexit)m(y)f Fa(O)s Fc(\()p Fa(n)p
Fc(\),)j(whereas)d(\(balanced\))g(binary)f(searc)m(h)-127
4517 y(trees)c(ha)m(v)m(e)g(complexit)m(y)g Fa(O)s Fc(\(log)16
b Fa(n)p Fc(\).)-127 4660 y(F)-8 b(or)34 b(the)f(same)g(reason)g
(deleting)f(an)h(arbitrary)e(no)s(de)h(in)g(a)h(heap)g(is)f(quite)g
(exp)s(ensiv)m(e,)h(namely)f Fa(O)s Fc(\()p Fa(n)p Fc(\).)48
b(Once)33 b(w)m(e)-127 4773 y(ha)m(v)m(e)25 b(found)e(the)h(no)s(de,)h
(w)m(e)f(can)g(delete)h(it)e(using)f(an)i(algorithm)f(that)i(is)e
(almost)h(the)g(same)g(as)g(the)h(one)f(for)g(deleting)-127
4886 y(no)s(des)g(of)h(BTS's.)38 b(Ob)m(viously)22 b(the)j(complexit)m
(y)g(gro)m(ws)g(b)s(ecause)f(the)h(main)f(problem)f(is)g(\014nding)g
(the)h(no)s(de.)39 b(Notice)-127 4999 y(that)f(in)e(class)i(\(and)f(in)
f(the)i(handout)e(6\))j(w)m(e)f(studied)d(a)j(particular)e(case)j(of)e
(deletion,)i(whic)m(h)d(is)h(deleting)f(the)-127 5112
y(greatest)c(elemen)m(t)f(of)g(the)g(heap)f(\(the)h(ro)s(ot,)g(i.e.,)g
(the)g(one)g(with)e(maxim)m(un)g(priorit)m(y\).)41 b(This)28
b(particular)h(case)j(has)-127 5225 y(lo)m(w)m(er)40
b(complexit)m(y)f(in)g(the)g(b)s(est)h(case)g(\(it)g(is)f
Fa(O)s Fc(\(1\)!\),)k(and)c(also)h(in)e(the)i(w)m(orst)g(case,)j(when)c
(the)h(elemen)m(t)g(that)-127 5338 y(replaces)30 b(the)h(ro)s(ot)f(b)s
(eing)f(deleted)h(has)h(to)g(b)s(e)e(sw)m(app)s(ed,)h(since)g(it)g(is)f
Fa(O)s Fc(\()p Fa(l)r(og)s Fc(\()p Fa(n)p Fc(\)\).)-243
5512 y(7.)46 b(W)-8 b(e)31 b(go)g(through)e(the)i(list)d(and)i(insert)f
(eac)m(h)i(item)f(in)m(to)g(an,)g(initially)d(empt)m(y)-8
b(,)31 b(A)-10 b(VL)30 b(tree.)41 b(After)31 b(this)d(w)m(e)j(tra)m(v)m
(erse)-127 5625 y(the)d(tree)h(in)e(in\014x)f(order)i(cop)m(ying)g(the)
g(no)s(des)g(that)g(w)m(e)h(visit)e(bac)m(k)i(in)m(to)f(the)g(list.)39
b(The)28 b(result)f(is)g(the)h(ordered)g(list.)-127 5769
y(Let)e Fa(n)g Fc(b)s(e)f(the)h(n)m(um)m(b)s(er)e(of)i(items)g(in)e
(the)i(list.)38 b(Eac)m(h)27 b(insertion)d(in)m(to)i(an)f(A)-10
b(VL)26 b(tree)h(tak)m(es)g(at)g(most)f Fa(O)s Fc(\(log)17
b Fa(n)p Fc(\))25 b(steps.)-127 5882 y(Since)k(w)m(e)i(ha)m(v)m(e)h
Fa(n)d Fc(no)s(des)h(to)h(insert)e(w)m(e)i(can)g(do)f(this)f(in)g
Fa(O)s Fc(\()p Fa(n)15 b Fc(log)i Fa(n)p Fc(\).)40 b(W)-8
b(e)32 b(can)e(tra)m(v)m(erse)i(the)f(tree)g(in)e(linear)g(time,)-127
5995 y Fa(O)s Fc(\()p Fa(n)p Fc(\).)41 b(Hence)31 b(the)g(complexit)m
(y)f(is)f(in)g Fa(O)s Fc(\()p Fa(n)15 b Fc(log)i Fa(n)p
Fc(\))30 b(\(remem)m(b)s(er)g(that)h Fa(O)s Fc(\()p Fa(f)10
b Fc(\()p Fa(n)p Fc(\))20 b(+)g Fa(g)s Fc(\()p Fa(n)p
Fc(\)\))26 b(=)f Fa(O)s Fc(\()p Fa(max)p Fc(\()p Fa(f)10
b Fc(\()p Fa(n)p Fc(\))p Fa(;)15 b(g)s Fc(\()p Fa(n)p
Fc(\)\).)1749 6244 y(1)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
