Hi...

For Internship @ Trilogy , I underwent one written test and two rounds of technical interviews. The written test was for about 45 mins (It was same for internship and final placements). The two interviews were of around one hour each. 

Written test :
(Although i dont remember the questions for the written test exactly, but ill try my best to pen them down).

There were 4 questions mostly of coding .

1) There is a wall, and there are sticks of different length standing vertically against the wall. There are two ants, perched on the top of 
one stick each.  You have to write code to find out whether the two ants can see each other or not. You are given an integer array,
which stores the length of the sticks, and position of the ants. So, your function prototype should be : 
 
bool canAntsSeeEachOther(int sticksLength[] , int i , int j);

where ants are perched upon ith and jth stick.

2) In this question, there was something like blocks of a spreadsheet.....so each block can be either a value of a formula....so there are dependencies between the blocks....if one block changes, other blocks (formulae) which are dependent on that block also change. We had to write code to efficiently update all the dependent blocks when one block is updated. 

3) There were two parts....in one part we had to write code to find the median of an array on integers in O(n) time using only constant amount of extra space. The second part i dont remember.

4) This was some variation of the dictionary problem. We had to design a data structure to store words of a dictionary based on some property. ( I dont remember the property :-D ). 
I gave a hashtable solution with some relevant hashkey.


1st Interview :

There were 2 questions asked.

1) Data has to be transferred from one node to another. Give an algorithm to efficiently detect errors AND correct the erroneous data. They basically wanted me to give an algo for parity checking in O(logn) time where n is the no. of bits transferred. After thinking for some time, I finally did it. 

2) a) Design a data structure to store an unlimited stream on numbers such that following two operations are efficient in terms of time ( around O(log n) ) : 
   1) Adding a number to the data structure.
   2) Extracting the kth largest number of the  all the numbers currently stored. 

b) Write code for the above.

(I gave a solution in which we can have a BST and in each node we can store the number of numbers greater than that node value present in the subtree of that node.....they were satisfied with the solution. Writing the code for it wasnt difficult). 

2nd Interview :

 There were two questions again :

1) Write code to convert a binary tree into a linked list (without using extra memory) , such that the order of elements in the linked list is same as the order of inorder traversal in the tree. 

(I wrote a recursive code for it.....they pointed out a small mistake which I corrected and they were ok with it.)

2) You are given a two dimentional plane in which there are n points. Give an algorithm to generate the equation of a line which divides the plane such that there are n/2 points on one side and n/2 on the other side of the line. (This question led to a long discussion.) 


Phew !! ....thats about it. I would say that these Trilogy guys see what approach you are following in your solutions rather than your end results. When you are writing a recursive code, remember not to forget the base case, or you are out !  
To cut it short, I think what they judge is, when you are given a complex problem, do you stick to your basics ?

All the best !
@nkur. :-)
