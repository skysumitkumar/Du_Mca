1>

main()
{       int arr[]={ 1,2,3,4 };
	int *ptr ;;;;
	ptr++ = arr;
	printf("%d,%d",ptr[2],arr[2]);
	return 0;
}
what  is the output :

a> compile time error :multiple termination statements for pointer
b> lvalue required for ptr
c> prints 3 3
d> printd 4 3

ans b: lvalue required for ptr;



2>

main()
{
   char s[10];
   scanf ("%s",s);
   printf(s);
   

}

what  is the output if input is abcd :

a> prints abcd 
b> compiler error  
c> prints abcd and 6 junk characters 
d> printd s

ans a: prints abcd.



3>

main()
{
	char c = 255;	
	printf ("%d",c);
	return 0;
}


what is the output

a> illegal character assignment
b> prints -1
c> prints 2
d> prints 255

ans b: prints -1.



4>
main()
{
 	int i;
  	for (i=7;i<=0;i--)
	printf ("hello\n");

}


what is the output

a> prints hello 7 times
b> prints hello 8 times
c> prints hello once
d> prints nothing

ans b: prints nothing.

5>

main()
{
	 printf( printf ("world") );

}

a> prints world
b> prints  printf ("world")
c> prints nothing
d> compiler error

ans  d: compiler error.






computer concepts

1> A c source code file can be

a> compiled only
b> interpreted only
c> both compiled and interpreted
d> nothing

ans c : both compiled and interpreted 



2> c programming approach is  

a> Top down
b> bottom up
c> both topdown and bottom up
d> none of the above

ans a:top down approach

3> The access time is less for 

a> hard disk
b> cache
c> registers
d> main memory

ans c:registers

4>resolving of external variables in a program is done at

a>complie time
b>run time
c>link time
4>load time 
  

ans c: link time.


5> interrupts inform process about

a> events external to process asynchronously
b> events external to process synchronously
c> both a and b
d> events internal to a process

ans a: events external to process asynchronously 
