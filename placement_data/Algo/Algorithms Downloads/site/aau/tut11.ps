%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: tut11.dvi
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Times-Roman Times-Bold
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -otut11.ps tut11.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2003.12.09:1300
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "1 July 1998",
%   filename = "8r.enc",
%   email = "tex-fonts@@tug.org",
%   docstring = "Encoding for TrueType or Type 1 fonts
%                to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both 
% ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (tut11.dvi)
@start
%DVIPSBitmapFont: Fa cmr10 10 7
/Fa 7 94 df<15301578B3A6007FB812F8B912FCA26C17F8C80078C8FCB3A6153036367B
AF41>43 D<EB03F8EB1FFF90387E0FC09038F803E03901E000F0484813780007147C4848
7FA248C77EA2481580A3007EEC0FC0A600FE15E0B3007E15C0A4007F141F6C1580A36C15
006D5B000F143EA26C6C5B6C6C5B6C6C485A6C6C485A90387E0FC0D91FFFC7FCEB03F823
3A7DB72A>48 D<EB01C013031307131F13FFB5FCA2131F1200B3B3A8497E007FB512F0A3
1C3879B72A>I<121C127FEAFF80A5EA7F00121CC7FCB2121C127FEAFF80A5EA7F00121C
092479A317>58 D<007FB812F8B912FCA26C17F8CCFCAE007FB812F8B912FCA26C17F836
167B9F41>61 D<EAFFF8A4EAF000B3B3B3B3A3EAFFF8A40D5378BD17>91
D<EAFFF8A4EA0078B3B3B3B3A3EAFFF8A40D537FBD17>93 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmmi10 10 7
/Fb 7 113 df<1760177017F01601A21603A21607160FA24C7EA216331673166316C3A2
ED0183A2ED0303150683150C160115181530A21560A215C014011580DA03007FA2020613
00140E140C5C021FB5FC5CA20260C7FC5C83495A8349C8FC1306A25BA25B13385B01F016
80487E000716FFB56C013F13FF5EA2383C7DBB3E>65 D<0103B77E4916F018FC903B0007
F80003FE4BEB00FFF07F80020FED3FC0181F4B15E0A2141FA25DA2143F19C04B143F1980
027F157F190092C812FE4D5A4A4A5AEF0FF04AEC1FC005FFC7FC49B612FC5F02FCC7B4FC
EF3FC00103ED0FE0717E5C717E1307844A1401A2130F17035CA2131F4D5A5C4D5A133F4D
5A4A4A5A4D5A017F4BC7FC4C5A91C7EA07FC49EC3FF0B812C094C8FC16F83B397DB83F>
I<14E0EB03F8A21307A314F0EB01C090C7FCAB13F8EA03FEEA070F000E1380121C121812
381230EA701F1260133F00E0130012C05BEA007EA213FE5B1201A25B12035BA200071318
13E01438000F133013C01470EB806014E014C01381EB838038078700EA03FEEA00F81539
7EB71D>105 D<150FED3F80A2157FA31600151C92C7FCABEC0F80EC3FE0ECF0F0903801
C0F849487E14005B130E130C131CEB1801133801305BA2EB0003A25DA21407A25DA2140F
A25DA2141FA25DA2143FA292C7FCA25CA2147EA214FEA25CA21301001E5B123F387F83F0
A238FF87E0495A00FE5BD87C1FC8FCEA707EEA3FF8EA0FC0214981B722>I<EB03F0EA01
FFA3EA00075CA3130F5CA3131F5CA3133F91C8FCA35B017EEB07C0ED1FF0ED783801FEEB
E0F89039FC01C1FCEC0383EC07070001130ED9F81C13F891383803F091387001E0000349
C7FCEBF1C0EBF38001F7C8FCEA07FEA2EBFFE0EBE7F8380FE0FEEBC07F6E7E141F001F80
D9800F1330A21670003F011F136001001380A216E04815C0007E1481020F1380158300FE
903807870048EB03FE0038EB00F8263B7CB92B>I<D803E0137F3A07F801FFE03A0E3C07
81F03A1C3E1E00F826383F387F00305B4A137C00705B00605BA200E090C712FC485A137E
A20000140101FE5C5BA2150300015D5B15075E120349010F133016C0031F13700007ED80
605B17E0EE00C0000F15014915801603EE0700001FEC0F0E49EB07FC0007C7EA01F02C26
7EA432>110 D<90390F8003F090391FE00FFC903939F03C1F903A70F8700F80903AE0FD
E007C09038C0FF80030013E00001491303018015F05CEA038113015CA2D800031407A25C
A20107140FA24A14E0A2010F141F17C05CEE3F80131FEE7F004A137E16FE013F5C6E485A
4B5A6E485A90397F700F80DA383FC7FC90387E1FFCEC07E001FEC9FCA25BA21201A25BA2
1203A25B1207B512C0A32C3583A42A>112 D E
%EndDVIPSBitmapFont
/Fc 139[28 32 37 2[42 46 7[28 37 46 100[{TeXBase1Encoding ReEncodeFont}
8 83.022 /Times-Bold rf
%DVIPSBitmapFont: Fd cmsy10 10 1
/Fd 1 16 df<EB1FF0EBFFFE487F000714C04814E04814F04814F8A24814FCA3B612FEA9
6C14FCA36C14F8A26C14F06C14E06C14C0000114006C5BEB1FF01F1F7BA42A>15
D E
%EndDVIPSBitmapFont
/Fe 135[50 4[39 44 8[28 3[44 1[44 29[66 19[50 49[{
TeXBase1Encoding ReEncodeFont}8 99.6264 /Times-Bold rf
/Ff 138[66 40 1[53 2[60 2[33 2[33 7[60 12[80 34[60 49[{
TeXBase1Encoding ReEncodeFont}9 119.552 /Times-Bold rf
/Fg 105[42 33[23 32 28 1[42 42 42 65 23 2[23 42 42 1[37
42 37 42 37 12[51 46 4[60 4[28 2[46 1[60 2[60 3[47 9[42
42 42 42 1[21 28 3[28 28 1[65 38[{TeXBase1Encoding ReEncodeFont}34
83.022 /Times-Roman rf /Fh 170[48 41 37 44 2[48 1[59
41 2[22 48 48 1[41 1[44 1[48 65[{TeXBase1Encoding ReEncodeFont}13
66.4176 /Times-Roman rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop 517 203 a Fg(A)t Fh(L)t(G)t(O)t(R)t(I)t(T)t(H)t(M)t(S)25
b Fg(&)f(D)q Fh(A)m(T)n(A)h Fg(S)t Fh(T)t(R)q(U)t(C)t(T)t(U)t(R)t(E)t
(S)1119 b Fg(I)t(N)t(F)t(1)25 b(\226)f(2)t(0)t(0)t(3)p
515 236 2865 4 v 515 523 a Ff(T)-11 b(utorial)30 b(11)515
725 y Fe(Exer)n(cise)25 b(1)639 848 y Fd(\017)124 b Fc(sort)p
Fg(\()p Fb(A)p Fg(\))20 b(=)805 947 y Fc(f)n(or)g Fb(j)28
b Fa(:=)23 b(1)d Fg(to)g Fb(k)k Fc(do)888 1047 y Fb(B)t
Fa([)p Fb(j)5 b Fa(])24 b(:=)e(0)805 1147 y Fc(end)f(f)n(or)805
1246 y(f)n(or)f Fb(i)j Fa(:=)f(1)f Fg(to)f Fb(n)h Fc(do)888
1346 y Fb(B)t Fa([)p Fb(A)p Fa([)p Fb(i)p Fa(]])j(:=)e
Fb(B)t Fa([)p Fb(A)p Fa([)p Fb(i)p Fa(]])d(+)f(1)805
1445 y Fc(end)j(f)n(or)805 1545 y Fb(p)i Fa(:=)g(1)805
1645 y Fc(f)n(or)d Fb(j)28 b Fa(:=)23 b(1)d Fg(to)g Fb(k)k
Fc(do)888 1744 y(f)n(or)c Fb(i)j Fa(:=)f(1)f Fg(to)f
Fb(B)t Fa([)p Fb(j)5 b Fa(])21 b Fc(do)971 1844 y Fb(A)p
Fa([)p Fb(p)p Fa(])j(:=)e Fb(j)971 1944 y(p)h Fa(:=)g
Fb(p)18 b Fa(+)g(1)888 2043 y Fc(end)j(f)n(or)805 2143
y(end)g(f)n(or)639 2309 y Fd(\017)41 b Fg(There)20 b(is)h(no)f
(contradiction)d(as)k(the)g(algorithm)d(is)j(not)f(comparison-based.)
1926 5255 y(1)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
