From: <Saved by Windows Internet Explorer 7>
Subject: C++ Level 1 Quiz
Date: Tue, 8 May 2007 13:08:33 +0530
MIME-Version: 1.0
Content-Type: text/html;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.eurosoft-inc.com/quiz/Cpp1.shtml
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.2180

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>C++ Level 1 Quiz</TITLE>
<META http-equiv=3DContent-Type content=3D"text/html; =
charset=3Diso-8859-1">
<META content=3D"MSHTML 6.00.5730.11" name=3DGENERATOR></HEAD>
<BODY>
<CENTER>
<TABLE width=3D"80%">
  <TBODY>
  <TR>
    <TD>
      <FORM action=3Dmchoice.cgi method=3Dpost><!--#config =
timefmt=3D"%T"--><INPUT=20
      type=3Dhidden value=3D"<!--#echo var=3D" name=3DStart =
DATE_LOCAL?-->"&gt; <INPUT=20
      type=3Dhidden value=3DCpp1 name=3DTest> <INPUT type=3Dhidden=20
      value=3D"C++ Syntax - Level 1" name=3DTitle>=20
      <TABLE cellPadding=3D6 border=3D1>
        <TBODY>
        <TR>
          <TD colSpan=3D2><FONT size=3D+2><B>C++ Level 1 Quiz =
</B></FONT>
        <TR>
          <TD>Name=20
          <TD><INPUT size=3D30 name=3DName>=20
        <TR>
          <TD>Your Home Zip=20
          <TD><INPUT size=3D30 name=3DZip> </TR></TBODY></TABLE><BR>
      <OL>
        <LI>The heading for the main function must have a semicolon at =
the end=20
        of the line.=20
        <DIR><INPUT type=3Dradio value=3D1 name=3DAa> True &nbsp; &nbsp; =
<INPUT=20
        type=3Dradio value=3D2 name=3DAa> False <INPUT type=3Dhidden =
value=3D2 name=3DCa>=20
        </DIR><BR>&nbsp;=20
        <LI>A parenthese is used at the beginning and the end of the =
function=20
        after the heading to show the start and stop of the modular =
code.=20
        <DIR><INPUT type=3Dradio value=3D1 name=3DAb> True &nbsp; &nbsp; =
<INPUT=20
        type=3Dradio value=3D2 name=3DAb> False <INPUT type=3Dhidden =
value=3D1 name=3DCb>=20
        </DIR><BR>&nbsp;=20
        <LI>To include code from the library in the program, such as =
iostream, a=20
        directive would be called up using this command.=20
        <DIR><INPUT type=3Dradio value=3D1 name=3DAc> #include &lt;&gt;; =
with=20
        iostream.h inside the brackets <BR><INPUT type=3Dradio value=3D2 =
name=3DAc>=20
        include (iostreamh) <BR><INPUT type=3Dradio value=3D3 name=3DAc> =
#include=20
        &lt;&gt; with iostream.h inside the brackets <BR><INPUT =
type=3Dradio=20
        value=3D4 name=3DAc> include #iostream,h; <INPUT type=3Dhidden =
value=3D1=20
        name=3DCc> </DIR><BR>&nbsp;=20
        <LI>Single line comments explaining code would be preceded like =
in the=20
        following example.=20
        <DIR><INPUT type=3Dradio value=3D1 name=3DAd> /** &nbsp; <INPUT =
type=3Dradio=20
        value=3D2 name=3DAd> // &nbsp; <INPUT type=3Dradio value=3D3 =
name=3DAd> *// &nbsp;=20
        <INPUT type=3Dradio value=3D4 name=3DAd> /* &nbsp; <INPUT =
type=3Dhidden value=3D2=20
        name=3DCd> </DIR><BR>&nbsp;=20
        <LI>Which line has all reserved words?=20
        <DIR><INPUT type=3Dradio value=3D1 name=3DAe> char, int, float, =
doubled,=20
        short, long, unsigned, signed <BR><INPUT type=3Dradio value=3D2 =
name=3DAe>=20
        sizeof, const, typedef, static, voided, enum, struct, union =
<BR><INPUT=20
        type=3Dradio value=3D3 name=3DAe> if, else, for, while do, =
switch, continue,=20
        brea <BR><INPUT type=3Dradio value=3D4 name=3DAe> defaulted, =
goto, return,=20
        extern, private, public, protected <INPUT type=3Dhidden =
value=3D3 name=3DCe>=20
        </DIR><BR>&nbsp;=20
        <LI>What punctuation must each command line have at the end of =
the line?=20

        <DIR><INPUT type=3Dradio value=3D1 name=3DAf> : &nbsp; <INPUT =
type=3Dradio=20
        value=3D2 name=3DAf> , &nbsp; <INPUT type=3Dradio value=3D3 =
name=3DAf> ! &nbsp;=20
        <INPUT type=3Dradio value=3D4 name=3DAf> ; &nbsp; <INPUT =
type=3Dradio value=3D5=20
        name=3DAf> . &nbsp; <INPUT type=3Dhidden value=3D4 name=3DCf> =
</DIR><BR>&nbsp;=20
        <LI>The C++ language is case-sensitive.=20
        <DIR><INPUT type=3Dradio value=3D1 name=3DA0> True &nbsp; &nbsp; =
<INPUT=20
        type=3Dradio value=3D2 name=3DA0> False <INPUT type=3Dhidden =
value=3D1 name=3DC0>=20
        </DIR><BR>&nbsp;=20
        <LI>C++ requires that all variables have the first letter of =
each word=20
        making up the name be capitalized.=20
        <DIR><INPUT type=3Dradio value=3D1 name=3DA1> True &nbsp; &nbsp; =
<INPUT=20
        type=3Dradio value=3D2 name=3DA1> False <INPUT type=3Dhidden =
value=3D2 name=3DC1>=20
        </DIR><BR>&nbsp;=20
        <LI>An uninitialized regular array declaration must always =
explicityly=20
        declare the array size.=20
        <DIR><INPUT type=3Dradio value=3D1 name=3DA2> True &nbsp; &nbsp; =
<INPUT=20
        type=3Dradio value=3D2 name=3DA2> False <INPUT type=3Dhidden =
value=3D1 name=3DC2>=20
        </DIR><BR>&nbsp;=20
        <LI>C++ requires that all variables have the first letter of =
each word=20
        making up the name of a variable be capitalized.=20
        <DIR><INPUT type=3Dradio value=3D1 name=3DA3> True &nbsp; &nbsp; =
<INPUT=20
        type=3Dradio value=3D2 name=3DA3> False <INPUT type=3Dhidden =
value=3D2 name=3DC3>=20
        </DIR><BR>&nbsp;=20
        <LI>The size used for an int is typically the most efficient =
size for=20
        the particular hardware a compiler is written to run on.=20
        <DIR><INPUT type=3Dradio value=3D1 name=3DA4> True &nbsp; &nbsp; =
<INPUT=20
        type=3Dradio value=3D2 name=3DA4> False <INPUT type=3Dhidden =
value=3D1 name=3DC4>=20
        </DIR><BR>&nbsp;=20
        <LI>The number 5.9875e17 must be stored in a(n):=20
        <DIR><INPUT type=3Dradio value=3D1 name=3DA5> int &nbsp; <INPUT =
type=3Dradio=20
        value=3D2 name=3DA5> long &nbsp; <INPUT type=3Dradio value=3D3 =
name=3DA5> double=20
        &nbsp; <INPUT type=3Dradio value=3D4 name=3DA5> single &nbsp; =
<INPUT=20
        type=3Dradio value=3D5 name=3DA5> float &nbsp; <INPUT =
type=3Dhidden value=3D3=20
        name=3DC5> </DIR><BR>&nbsp;=20
        <LI>Select the correct definition for a string variable.=20
        <DIR><INPUT type=3Dradio value=3D1 name=3DA6> string mystr; =
<BR><INPUT=20
        type=3Dradio value=3D2 name=3DA6> string mystr[20]; <BR><INPUT =
type=3Dradio=20
        value=3D3 name=3DA6> string[20] mystr; <BR><INPUT type=3Dradio =
value=3D4=20
        name=3DA6> char mystr; <BR><INPUT type=3Dradio value=3D5 =
name=3DA6> char=20
        mystr[20]; <INPUT type=3Dhidden value=3D5 name=3DC6> =
</DIR><BR>&nbsp;=20
        <LI>The sentence "Hello world!" uses _____ elements in a =
character=20
        array.=20
        <DIR><INPUT type=3Dradio value=3D1 name=3DA7> 10 &nbsp; <INPUT =
type=3Dradio=20
        value=3D2 name=3DA7> 11 &nbsp; <INPUT type=3Dradio value=3D3 =
name=3DA7> 12 &nbsp;=20
        <INPUT type=3Dradio value=3D4 name=3DA7> 13 &nbsp; <INPUT =
type=3Dradio value=3D5=20
        name=3DA7> 14 &nbsp; <INPUT type=3Dhidden value=3D4 name=3DC7> =
</DIR><BR>&nbsp;=20
        <LI>When you are creating a structure, you need to use the =
following=20
        keyword.=20
        <DIR><INPUT type=3Dradio value=3D1 name=3DA8> structure &nbsp; =
<INPUT=20
        type=3Dradio value=3D2 name=3DA8> object &nbsp; <INPUT =
type=3Dradio value=3D3=20
        name=3DA8> struct &nbsp; <INPUT type=3Dradio value=3D4 =
name=3DA8> record &nbsp;=20
        <INPUT type=3Dradio value=3D5 name=3DA8> field <INPUT =
type=3Dhidden value=3D3=20
        name=3DC8> </DIR><BR>&nbsp;=20
        <LI>True or False: Variables can be defined both inside and =
outside a=20
        function.=20
        <DIR><INPUT type=3Dradio value=3D1 name=3DA9> True &nbsp; &nbsp; =
<INPUT=20
        type=3Dradio value=3D2 name=3DA9> False <INPUT type=3Dhidden =
value=3D1 name=3DC9>=20
        </DIR><BR>&nbsp;=20
        <LI>Select the correct function definition (NOT prototype) from =
the list=20
        below.=20
        <DIR><INPUT type=3Dradio value=3D1 name=3DA10> void intro(); =
<BR><INPUT=20
        type=3Dradio value=3D2 name=3DA10> int foo(int bar; double baz) =
<BR><INPUT=20
        type=3Dradio value=3D3 name=3DA10> double sin(double rad); =
<BR><INPUT=20
        type=3Dradio value=3D4 name=3DA10> double pow(double num, int =
pow); <BR><INPUT=20
        type=3Dradio value=3D5 name=3DA10> double pow(double num, int =
pow) <INPUT=20
        type=3Dhidden value=3D5 name=3DC10> </DIR><BR>&nbsp;=20
        <LI>Cout can print multiple values or variables in a single =
command=20
        using the following syntax:=20
        <DIR><INPUT type=3Dradio value=3D1 name=3DA11> cout &lt;&lt; =
"Hi" + bob +=20
        "\n"; <BR><INPUT type=3Dradio value=3D2 name=3DA11> cout =
&lt;&lt; "Hi"=20
        &lt;&lt; bob &lt;&lt; "\n"; <BR><INPUT type=3Dradio value=3D3 =
name=3DA11> cout=20
        &lt;&lt; "Hi", bob, "\n"; <BR><INPUT type=3Dradio value=3D4 =
name=3DA11> cout=20
        &lt;&lt; ("Hi" &amp; bob &amp; "\n"); <BR><INPUT type=3Dradio =
value=3D5=20
        name=3DA11> cout &lt;&lt; ("Hi" + bob + "\n"); <INPUT =
type=3Dhidden value=3D2=20
        name=3DC11> </DIR><BR>&nbsp;=20
        <LI>Consider the following structure:=20
        <DIR><PRE> struct coord { int x; int y; } </PRE></DIR>You can =
define a=20
        variable of this type with the command:=20
        <DIR><INPUT type=3Dradio value=3D1 name=3DA12> struct coord =
mycoord.x,=20
        mycoord.y; <BR><INPUT type=3Dradio value=3D2 name=3DA12> struct =
coord=20
        mycoord;<BR><INPUT type=3Dradio value=3D3 name=3DA12> coord =
mycoord.x,=20
        mycoord.y; <BR><INPUT type=3Dradio value=3D4 name=3DA12> coord =
mycoord;=20
        <BR><INPUT type=3Dradio value=3D5 name=3DA12> struct coord =
mycoord.x; struct=20
        coord mycoord.y; <INPUT type=3Dhidden value=3D4 name=3DC12> =
</DIR><BR>&nbsp;=20
        <LI>Write a for loop that counts from 0 to 5.=20
        <DIR><INPUT type=3Dradio value=3D1 name=3DA13> for (int c =3D 0; =
c &lt;=3D 6; c++)=20
        <BR><INPUT type=3Dradio value=3D2 name=3DA13> for (c =3D 0; c =
&lt; 5; c++)=20
        <BR><INPUT type=3Dradio value=3D3 name=3DA13> for (c =3D 0; c =
&lt; 5; c++);=20
        <BR><INPUT type=3Dradio value=3D4 name=3DA13> for (c =3D 0; c =
&lt;=3D 5; c++)=20
        <BR><INPUT type=3Dradio value=3D5 name=3DA13> for (c =3D 0; c =
&lt; 6; c++);=20
        <INPUT type=3Dhidden value=3D4 name=3DC13> </DIR><BR>&nbsp; =
</LI></OL>
  <TR>
    <TD><INPUT type=3Dsubmit value=3D"   Finish   " name=3DPOST>=20
</FORM></TR></TBODY></TABLE></CENTER></BODY></HTML>
