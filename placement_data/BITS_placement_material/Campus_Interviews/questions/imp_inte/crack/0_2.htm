
<HTML>
<HEAD>
<TITLE>CRACK THE INTERVIEW - How do you sort a linked list? Write a C program to sort a linked list.  (www.cracktheinterview.com)</TITLE><style type="text/css">
<!--
.breakhere     {page-break-before: always}

A:link         {font-family:Arial, Helvetica, Geneva, sans-serif;
                font-size:9pt; color:#996633} 
A:active       {font-family:Arial, Helvetica, Geneva, sans-serif;
                font-size:9pt; color:#000000} 
A:visited      {font-family:Arial, Helvetica, Geneva, sans-serif;
                font-size:9pt; color:#996633} 

H1             {font-family:Arial, Helvetica, Geneva, sans-serif;
                font-size:12pt; font-weight:bold; color:#336699} 
H2             {font-family:Arial, Helvetica, Geneva, sans-serif;
                font-size:small; font-weight:bold} 
.normal        {font-family:Arial, Helvetica, Geneva, sans-serif;
                font-size:9pt; color:#000000} 
.announce      {font-family:Verdana, Arial, Helvetica, Geneva,
                sans-serif; color:#000000} 
.announceLink  {font-family:Verdana, Arial, Helvetica, Geneva,
                sans-serif; color:#336699} 
.note          {font-family:Arial, Helvetica, Geneva, sans-serif;
                font-size:8pt ! important; font-weight:normal} 
.system        {font-family:Courier New, Courier; font-size:x-small;
                font-weight:normal} 
.stayblue      {color:#336699 ! important}
.title         {font-family:Arial, Helvetica, Geneva, sans-serif;
                font-size:larger ! important} 
.error         {font-family:Arial, Helvetica, Geneva, sans-serif;
                font-size:small; color:#aa0000; font-weight:bold} 
.notelink      {font-family:Arial, Helvetica, Geneva, sans-serif;
                color:#336699 ! important; font-weight:normal;
                font-size:9pt ! important} 
.tableHeader   {font-family:Arial, Helvetica, Geneva, sans-serif;
                font-size:10pt; color:#336699; font-weight: bold;
                background-color:#3284FF} 
.tableHeaderSmall {font-family:Arial, Helvetica, Geneva, sans-serif;
                font-size:8pt; color:#336699; font-weight: bold;
                background-color:#3284FF} 
.tableRow      {font-family:Arial, Helvetica, Geneva, sans-serif;
                font-size:10pt; color:black; font-weight: normal;
                background-color:#f7f7e7} 
.tableBlank    {font-family:Arial, Helvetica, Geneva, sans-serif;
                font-size:10pt; color:black; font-weight: normal;
                background-color:#ffffff} 
.hardlink      {font-family:Arial, Helvetica, Geneva, sans-serif;
                color:#336699 ! important; font-weight:bold;
                font-size:8pt ! important} 
.boxlink       {font-family:Arial, Helvetica, Geneva, sans-serif;
                color:#000000 ! important; font-weight:normal;
                font-size:8pt ! important} 
.hardnote      {font-family:Arial, Helvetica, Geneva, sans-serif;
                color:black ! important; font-weight:normal;
                font-size:8pt ! important} 
.tableRowSmall {font-family:Verdana, Arial, Helvetica, Geneva,
                sans-serif; font-size:8pt; color:black; font-weight:
                normal} 
.tableRowSmallBold {font-family:Verdana, Arial, Helvetica, Geneva,
                sans-serif; font-size:8pt; color:black; font-weight:
                bold} 
.blueHeading   {font-family:Arial, Helvetica, Geneva, sans-serif;
                font-size:12pt! important; font-weight:bold;
                color:#336699! important} 
.blueHeadingLarge {font-family:Arial, Helvetica, Geneva, sans-serif;
                font-size:16pt! important; font-weight:normal;
                color:#336699} 
.blueHeadingMid {font-family:Arial, Helvetica, Geneva, sans-serif;
                font-size:12pt! important; font-weight:normal;
                color:#336699}
.blueHeadingSmall {font-family:Arial, Helvetica, Geneva, sans-serif;
                font-size:10pt! important; font-weight:bold;
                color:#336699} 
.tableHeaderV  {font-family:Verdana,Arial, Helvetica, Geneva, sans-serif;
                font-size:8pt; color:#336699; font-weight: bold;
                background-color:#3284FF} 
.tableRowV     {font-family:Verdana,Arial, Helvetica, Geneva,
                sans-serif; font-size:8pt; color:black; font-weight:
                normal; background-color:#f7f7e7} 
.just          {text-align: justify}
-->
</style>

<META NAME="keywords" CONTENT="interview,C,sort,linked list">
<META NAME="description" CONTENT="How do you sort a linked list? Write a C program to sort a linked list. ">
<META NAME="robots" CONTENT="FOLLOW,INDEX">
<META HTTP-EQUIV="no-cache">
<META HTTP-EQUIV="expires" CONTENT="Wed, 26 Feb 1997 08:21:57 GMT">

</HEAD>
<BODY>
<TABLE BORDER=0 cellpadding=10>



<TR>
<TD WIDTH=100%% valign=top colspan=2><CENTER><A HREF="http://www.cracktheinterview.com"><IMG SRC=http://www.cracktheinterview.com/images/logo2.jpg border=0></img></A></CENTER></TD>


<TR>
<TD WIDTH=100%% valign=top colspan=2>
<CENTER>


<!--START:ADS0-->

<script type="text/javascript">
<!--
google_ad_client = "pub-4208362929074433";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "text_image";
google_ad_channel ="";
google_color_border = "CCCCCC";
google_color_bg = "FFFFFF";
google_color_link = "000000";
google_color_url = "666666";
google_color_text = "333333";
//-->
</script>
<script type="text/javascript"
  src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>



<!--END-->


</CENTER>
</TD>
</TR>





<TR>
<TD WIDTH=100%% valign=top colspan=2><CENTER>

<!--START:LINKS-->


<TABLE BORDER=0 cellpadding=10>
<TR><TD NOWRAP>
<A HREF="http://www.cracktheinterview.com" target="_top"><font class=announcelink>Home</font></A><BR>
</TD>

<TD NOWRAP>
<A HREF="http://www.cracktheinterview.com/adfaqpublish.html" target="_top"><font class=announcelink>Questions</font></A><BR>
</TD>


<TD NOWRAP>
<A href="http://www.cracktheinterview.com/search.html" target="_top"><font class=announcelink>Search</font></A><BR>
</TD>

<TD NOWRAP>
<A HREF="http://www.cracktheinterview.com/forum" target="_top"><font class=announcelink>Forum</font></A><BR>
</TD>

<TD NOWRAP>
<A href="mailto:cracktheinterview@gmail.com?subject=Hi!"><font class=announcelink>Contact</font></A><BR>
</TD>

<TD NOWRAP>
<A href="http://www.cracktheinterview.com/forum/viewforum.php?f=2" target="_top"><font class=announcelink>Guest Book</font></A><BR>
</TD>

<TD NOWRAP>
<A href="http://www.cracktheinterview.com/forum/viewforum.php?f=3" target="_top"><font class=announcelink>Polls!</font></A><BR>
</TD>

<TD NOWRAP>
<A href="http://www.cracktheinterview.com/forum/viewforum.php?f=4" target="_top"><font class=announcelink>Got a Question?</font></A><BR>
</TD>

</TABLE>

<!--END-->

</CENTER></TD>
</TR>


<TR>
<TD WIDTH=100%% valign=top colspan=2><CENTER> &nbsp; </CENTER></TD>
</TR>


<TR>
<TD WIDTH=90%% valign=top>





<!--START : DATA-->



<TABLE BORDER=0>

<TR>
<TD WIDTH=5%%><CENTRE><font class=notelink><A HREF="0_1.html">PREV</A></font></CENTRE></TD>
<TD WIDTH=90%%><center><font class=blueHeading>Linked Lists</font></center></TD>
<TD WIDTH=5%%><CENTRE><font class=notelink><A HREF="0_3.html">NEXT</A></font></CENTRE></TD></TR>
<TR>
<TD WIDTH=5%%><CENTRE>&nbsp;</CENTRE></TD>
<TD WIDTH=90%%><CENTER><font class=blueHeading>(3 / 268)</font></center></TD>
<TD WIDTH=5%%><CENTRE>&nbsp;</CENTRE></TD></TR>
<TR>
<TD WIDTH=5%%></TD>
<TD WIDTH=90%%><center>&nbsp;</center></TD>
<TD WIDTH=5%%></TD></TR>
<TR>
<TD COLSPAN=3 width=700 align=left>
<font class=announceLink><BR><BR><BR>
<!--THE QUESTION-->

How do you sort a linked list? Write a C program to sort a linked list. <BR>
<!--END-->
<BR></font></TD></TR>
<TR>
<TD COLSPAN=3 width=700 align=left>
<font class=normal>
<!--THE ANSWER--><BR>
<!--META:START--><!--interview,C,sort,linked list--><!--META:END--><BR>
<BR>
<font class=announcelink>This is a very popular interview question</font>, which most people go wrong. The ideal solution to this problem is to keep the linked list sorted <font class=announcelink>as you build it</font>. This really saves a lot of time which would have been required to sort it. <BR>
<BR>
However....<BR>
<BR>
<font class=announcelink>Method1 (Usual method)</font><BR>
<BR>
The general idea is to decide upon a sorting algorithm (say bubble sort). Then, one needs to come up with different scenarios to swap two nodes in the linked list when they are not in the required order. The different scenarios would be something like<BR>
<BR>
<CODE><BR>
1.&nbsp;When&nbsp;the&nbsp;nodes&nbsp;being&nbsp;compared&nbsp;are&nbsp;not&nbsp;adjacent&nbsp;and&nbsp;one&nbsp;of&nbsp;them&nbsp;is&nbsp;the&nbsp;first&nbsp;node.<BR>
2.&nbsp;When&nbsp;the&nbsp;nodes&nbsp;being&nbsp;compared&nbsp;are&nbsp;not&nbsp;adjacent&nbsp;and&nbsp;none&nbsp;of&nbsp;them&nbsp;is&nbsp;the&nbsp;first&nbsp;node<BR>
3.&nbsp;When&nbsp;the&nbsp;nodes&nbsp;being&nbsp;compared&nbsp;are&nbsp;adjacent&nbsp;and&nbsp;one&nbsp;of&nbsp;them&nbsp;is&nbsp;the&nbsp;first&nbsp;node.<BR>
4.&nbsp;When&nbsp;the&nbsp;nodes&nbsp;being&nbsp;compared&nbsp;are&nbsp;adjacent&nbsp;and&nbsp;none&nbsp;of&nbsp;them&nbsp;is&nbsp;the&nbsp;first&nbsp;node.<BR>
</CODE><BR>
<BR>
<BR>
One example bubble sort for a linked list goes like this<BR>
<BR>
<CODE><BR>
for(i&nbsp;=&nbsp;1;&nbsp;i&nbsp;<&nbsp;n;&nbsp;i++)<BR>
{<BR>
&nbsp;&nbsp;&nbsp;&nbsp;p1&nbsp;=&nbsp;head;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;p2&nbsp;=&nbsp;head->next;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;p3&nbsp;=&nbsp;p2->next;<BR>
&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;for(j&nbsp;=&nbsp;1;&nbsp;j&nbsp;&lt;=&nbsp;(n&nbsp;-&nbsp;i);&nbsp;j++)<BR>
&nbsp;&nbsp;&nbsp;&nbsp;{<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(p2->value&nbsp;<&nbsp;p3->value)&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p2->next&nbsp;=&nbsp;p3->next;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p3->next&nbsp;=&nbsp;p2;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p1->next&nbsp;=&nbsp;p3;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;p3;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;p2->next;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p1&nbsp;=&nbsp;p2;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p2&nbsp;=&nbsp;p3;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p3&nbsp;=&nbsp;p3->next;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<BR>
&nbsp;&nbsp;&nbsp;&nbsp;}<BR>
}<BR>
</CODE><BR>
<BR>
As you can see, the code becomes quite <font class=announcelink>messy</font> because of the pointer logic. Thats why I have not elaborated too much on the code, nor on variations such as soring a doubly linked list. You have to do it yourself once to understand it.<BR>
<BR>
<BR>
<BR>
<font class=announcelink>Method1 (Divide and Conquer using merge sort)</font> <BR>
<BR>
The pseudocode for this method is<BR>
<BR>
<BR>
<CODE><BR>
typedef&nbsp;struct&nbsp;node<BR>
{<BR>
&nbsp;&nbsp;&nbsp;int&nbsp;value;<BR>
&nbsp;&nbsp;&nbsp;struct&nbsp;node&nbsp;*next;<BR>
}mynode;<BR>
<BR>
mynode&nbsp;*head,&nbsp;*tail;<BR>
int&nbsp;size;<BR>
<BR>
mynode&nbsp;*mergesort(mynode&nbsp;*list,&nbsp;int&nbsp;size);<BR>
void&nbsp;display(mynode&nbsp;*list);<BR>
<BR>
mynode&nbsp;*mergesort(mynode&nbsp;*list,&nbsp;int&nbsp;size)<BR>
{<BR>
&nbsp;&nbsp;int&nbsp;size1,&nbsp;size2;<BR>
&nbsp;&nbsp;mynode&nbsp;*tempnode1,&nbsp;*tempnode2,&nbsp;*tempnode3;<BR>
<BR>
&nbsp;&nbsp;if(size&lt;=2)<BR>
&nbsp;&nbsp;{<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(size==1)<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Nothing&nbsp;to&nbsp;sort!<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(list);<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(list->value&nbsp;<&nbsp;list->next->value<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;These&nbsp;2&nbsp;nodes&nbsp;are&nbsp;already&nbsp;in&nbsp;right&nbsp;order,&nbsp;no&nbsp;need&nbsp;to&nbsp;sort<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(list);<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Need&nbsp;to&nbsp;swap&nbsp;these&nbsp;2&nbsp;nodes<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;Here&nbsp;we&nbsp;have&nbsp;2&nbsp;nodes<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;node&nbsp;1&nbsp;->&nbsp;node2&nbsp;->&nbsp;NULL<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;This&nbsp;should&nbsp;be&nbsp;converted&nbsp;to<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;node2&nbsp;->&nbsp;node1&nbsp;->&nbsp;NULL<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/<BR>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tempnode1&nbsp;=&nbsp;list;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tempnode2&nbsp;=&nbsp;list->next;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tempnode2->next&nbsp;=&nbsp;tempnode1;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tempnode1->next&nbsp;=&nbsp;NULL;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(tempnode2);<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;<BR>
&nbsp;&nbsp;}<BR>
&nbsp;&nbsp;else<BR>
&nbsp;&nbsp;{<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;The&nbsp;size&nbsp;of&nbsp;the&nbsp;linked&nbsp;list&nbsp;is&nbsp;more&nbsp;than&nbsp;2.<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Need&nbsp;to&nbsp;split&nbsp;this&nbsp;linked&nbsp;list,&nbsp;sort&nbsp;the&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;left&nbsp;and&nbsp;right&nbsp;sub-linked&nbsp;lists&nbsp;and&nbsp;merge.<BR>
&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Split.<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;tempnode1&nbsp;will&nbsp;have&nbsp;the&nbsp;first&nbsp;half&nbsp;of&nbsp;the&nbsp;linked&nbsp;list&nbsp;of&nbsp;size&nbsp;"size1".<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;tempnode2&nbsp;will&nbsp;have&nbsp;the&nbsp;second&nbsp;half&nbsp;of&nbsp;the&nbsp;linked&nbsp;list&nbsp;of&nbsp;size&nbsp;"size2".<BR>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;CODE&nbsp;TO&nbsp;SPLIT&nbsp;THE&nbsp;LINKED&nbsp;LIST&nbsp;INTO&nbsp;TWO><BR>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Sort&nbsp;the&nbsp;two&nbsp;halves&nbsp;recursively&nbsp;<BR>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tempnode1&nbsp;=&nbsp;mergesort(tempnode1,&nbsp;size1);<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tempnode2&nbsp;=&nbsp;mergesort(tempnode2,&nbsp;size2);<BR>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Now&nbsp;merge&nbsp;the&nbsp;sorted&nbsp;lists&nbsp;back,&nbsp;let&nbsp;tempnode3&nbsp;point&nbsp;to&nbsp;that&nbsp;new&nbsp;list.<BR>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;CODE&nbsp;TO&nbsp;MERGE&nbsp;THE&nbsp;2&nbsp;LINKED&nbsp;LISTS&nbsp;BACK&nbsp;INTO&nbsp;A&nbsp;SINGLE&nbsp;SORTED&nbsp;LINKED&nbsp;LIST><BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(tempnode3);<BR>
&nbsp;&nbsp;}<BR>
}<BR>
<BR>
</CODE> <BR>
<BR>
<BR>
The code to merge the two <font class=announcelink>already sorted</font> sub-linked lists into a sorted linked list could be something like this..<BR>
<BR>
<CODE><BR>
mynode&nbsp;*&nbsp;merge(mynode&nbsp;*a,&nbsp;mynode&nbsp;*b)<BR>
{<BR>
&nbsp;&nbsp;&nbsp;mynode&nbsp;*i,&nbsp;*j,&nbsp;*k,&nbsp;*c;<BR>
<BR>
&nbsp;&nbsp;&nbsp;i&nbsp;=&nbsp;a;<BR>
&nbsp;&nbsp;&nbsp;j&nbsp;=&nbsp;b;<BR>
&nbsp;&nbsp;&nbsp;c&nbsp;=&nbsp;getNewNode();<BR>
&nbsp;&nbsp;&nbsp;k&nbsp;=&nbsp;getNewNode();<BR>
<BR>
&nbsp;&nbsp;&nbsp;while(i!=NULL&nbsp;&&&nbsp;j!=NULL)<BR>
&nbsp;&nbsp;&nbsp;{<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(i->value&nbsp;<&nbsp;j->value)<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k->next=i;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i=i->next;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k->next=j;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j=j->next;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<BR>
&nbsp;&nbsp;&nbsp;}<BR>
&nbsp;&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;if(i!=NULL)<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k->next=i;<BR>
&nbsp;&nbsp;&nbsp;else<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k->next=j;<BR>
<BR>
&nbsp;&nbsp;&nbsp;return(c->next);<BR>
<BR>
}<BR>
</CODE> 
<BR><BR>
<!--END-->
</font><BR></TD></TR>
<TR>
<TD WIDTH=5%%><CENTRE><font class=notelink><A HREF="0_1.html">PREV</A></font></CENTRE></TD>
<TD WIDTH=90%%><center><font class=notelink><A href="mailto:cracktheinterview@gmail.com?subject=Comments [How do you sort a linked list? Write a C program to sort a linked list. ]&Body=Question : [How do you sort a linked list? Write a C program to sort a linked list. ]"><font class=announcelink>COMMENTS</A></font>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<font class=notelink><A HREF=../adfaqpublish.html>INDEX</A></font>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<font class=notelink><a href="#" onclick="window.print();return false;">PRINT</a></font></center></TD>
<TD WIDTH=5%%><CENTRE><font class=notelink><A HREF="0_3.html">NEXT</A></font></CENTRE></TD></TR>
<TR>
<TD COLSPAN=3 width=700 align=left>
<BR><BR><BR><font class=notelink>
Last updated:

July 8, 2005<BR><BR>
<a href=http://www.cracktheinterview.com>www.cracktheinterview.com</a> - Your destination for the most common IT interview questions, answers, frequently asked interview questions (FAQ), C Programs, C Datastructures for interviews conducted by Microsoft, Oracle, Google, IBM, HP, Yahoo, Infosys, Wipro, SAP, CA (Computer Associates), Sun, Adobe, GE, Novell, Cisco, Motorola, TI (Texas Instruments), Intel, TCS, iFlex, Trilogy, MindTree, GS and more...<br><BR>

</TD>
</TR>
</TABLE>




<!--END-->


</TD>




<TD WIDTH=10%% valign="top">


<!--START:ADS1-->


<script type="text/javascript">
<!--
google_ad_client = "pub-4208362929074433";
google_alternate_color = "CCCCCC";
google_ad_width = 120;
google_ad_height = 600;
google_ad_format = "120x600_as";
google_ad_type = "text_image";
google_ad_channel ="";
google_color_border = "CCCCCC";
google_color_bg = "FFFFFF";
google_color_link = "000000";
google_color_url = "666666";
google_color_text = "333333";
//-->
</script>
<script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>


<BR>
<BR>
<BR>
<BR>
<BR>
<BR>
<BR>

<script type="text/javascript">
<!--
google_ad_client = "pub-4208362929074433";
google_ad_width = 120;
google_ad_height = 600;
google_ad_format = "120x600_as";
google_ad_type = "text";
google_ad_channel ="";
google_color_border = "CCCCCC";
google_color_bg = "FFFFFF";
google_color_link = "000000";
google_color_url = "666666";
google_color_text = "333333";
//-->
</script>
<script type="text/javascript"  src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>



<!--END-->

</TD>
</TR>





</TABLE>



</BODY>
</HTML>


